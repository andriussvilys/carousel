{"version":3,"sources":["components/Carousel.js","App.js","index.js","components/css/index.module.scss"],"names":["Carousel","props","containerRef","React","useRef","slideContainerRef","zoomRef","useState","window","document","body","getBoundingClientRect","width","mobile","setMobile","onresize","smooth","currentSlide","prevTransform","initialTransform","currentTransform","slidePosition","setSlidePosition","zoomDefault","pinch","zoom","scale","distance","origin","x","y","dotOrigin","initialOrigin","position","pinchDistance","setZoom","slideTo","index","slideToIndex","images","length","newTransfrom","delay","setTimeout","moveHandler","state","options","containerWidth","current","clientWidth","slideCount","slideWidth","transform","movement","direction","moveSpeed","Math","abs","round","moveEndHandler","positionFix","genericOptions","domTarget","filterTaps","eventOptions","passive","bind","useGesture","onDragStart","onDrag","event","touches","tap","console","log","targetRect","clientPosition","initial","targetOffset","imageRect","imageOffset","cursorOnImage","height","zoomStatus","onDragEnd","onPinch","currentImg","imgOffset","da","difference","onPinchEnd","onWheelStart","onWheel","preventDefault","onWheelEnd","onMove","delta","zoomPanHandler","useEffect","querySelector","style","overflow","id","ref","className","styles","container","showOverflow","arrowPrev","onClick","slideContainer","smoothSlide","map","image","slide","key","transformOrigin","src","alt","arrowNext","dotContainer","imageList","dots","dot","dot_active","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.574b61be.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useGesture } from 'react-use-gesture'\r\n\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const containerRef = React.useRef()\r\n    const slideContainerRef = React.useRef()\r\n    const zoomRef = React.useRef(null)\r\n    const [mobile, setMobile] = useState(window.document.body.getBoundingClientRect().width > 720 ? false : true)\r\n    function checkDocumentSize() {\r\n        setMobile(window.document.body.getBoundingClientRect().width > 720 ? false : true);\r\n    }\r\n    \r\n    window.onresize = checkDocumentSize;\r\n    \r\n    const [slidePosition, setSlidePosition] = useState({\r\n        smooth: true,\r\n        currentSlide: props.currentSlide,\r\n        prevTransform: props.initialTransform,\r\n        currentTransform: props.initialTransform\r\n    })\r\n    const zoomDefault =  {\r\n        pinch: null,\r\n        zoom: null,\r\n        smooth: false,\r\n        scale: 1,\r\n        distance: 0,\r\n        origin: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        dotOrigin: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        initialOrigin: null,\r\n        position: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        pinchDistance: 0,\r\n    }\r\n    const [zoom, setZoom] = useState({...zoomDefault})\r\n    \r\n\r\n    const slideTo = (index) => {\r\n        let slideToIndex = index;\r\n        if(slideToIndex < 0){\r\n            slideToIndex = props.images.length - 1; \r\n        }\r\n        else if(slideToIndex > props.images.length - 1){\r\n            slideToIndex = 0;\r\n        }\r\n        const newTransfrom = -((100 / props.images.length) * slideToIndex)\r\n        let delay = zoom.zoom ? 250 : 0\r\n        if(zoom.zoom){\r\n            setZoom({...zoomDefault})\r\n        }\r\n        setTimeout(() => {            \r\n            setSlidePosition({\r\n                ...slidePosition,\r\n                currentSlide: slideToIndex,\r\n                currentTransform: newTransfrom,\r\n                prevTransform: newTransfrom,\r\n            })\r\n        }, delay);\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === slidePosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n    const arrowNext = () => {\r\n        if(mobile)return\r\n        return <div \r\n            className={styles.arrowNext}\r\n            onClick={() => {\r\n                slideTo(slidePosition.currentSlide + 1)\r\n            }}\r\n        ></div>\r\n    }\r\n    const arrowPrev = () => {\r\n        if(mobile)return\r\n        return <div \r\n            className={styles.arrowPrev}\r\n            onClick={() => {\r\n                slideTo(slidePosition.currentSlide - 1)\r\n            }}\r\n        ></div>\r\n    }\r\n\r\n    const renderImages = (data) => {\r\n        return data.map((image, index) => {\r\n        return (\r\n            <div\r\n            id={`SLIDE-${index}`}\r\n            className={`${styles.slide} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            key={`${image}-${index}`}\r\n            style={{width: `${100 / props.images.length}%`}}\r\n            >                    \r\n                <img \r\n                    style={slidePosition.currentSlide === index ? \r\n                        {transform: `scale(${zoom.scale}) translate(${zoom.position.x}%, ${zoom.position.y}%)`,\r\n                         transformOrigin: `${zoom.origin.x}% ${zoom.origin.y}%`\r\n                        } : {}}\r\n                    className={`${zoom.smooth && slidePosition.currentSlide === index ? styles.smoothSlide : \"\"}`}\r\n                    ref={slidePosition.currentSlide === index ? zoomRef : null}\r\n                    src={image.src}\r\n                    alt={image.src}\r\n                />\r\n            </div>\r\n        )\r\n        })\r\n    }\r\n\r\n    const moveStartHandeler = (state) => {\r\n    }\r\n    const moveHandler = (state, options) => {\r\n        if(zoom.zoom){\r\n        return}\r\n          const containerWidth = containerRef.current.clientWidth;\r\n          const slideCount = props.images.length\r\n          const slideWidth = 100 / slideCount\r\n          let  transform = slidePosition.prevTransform + ((state.movement[0] * options.direction * options.moveSpeed * 100 / containerWidth) / slideCount)\r\n\r\n        if(transform > slideWidth/3){\r\n            return\r\n        }\r\n        if(transform < -100 + (slideWidth/3)*2){\r\n            return\r\n        }\r\n        var index = Math.abs(Math.round(transform/slideWidth))\r\n        index = index > slideCount - 1 ? slideCount - 1 : index\r\n\r\n          return setSlidePosition({ \r\n            ...slidePosition,  \r\n            currentSlide: index,\r\n            currentTransform: transform,\r\n            smooth: false\r\n            })\r\n    }\r\n    const moveEndHandler = (state) => {\r\n        if(zoom.zoom){\r\n        return}\r\n\r\n        var positionFix = slidePosition.currentTransform;\r\n        var slideCount = props.images.length;\r\n        var slideWidth = 100 / slideCount;\r\n        positionFix = positionFix > 0 ? 0 : positionFix\r\n        const index = slidePosition.currentSlide\r\n\r\n        positionFix = (0 - (slideWidth * index))\r\n\r\n        return setSlidePosition({\r\n            ...slidePosition, \r\n            prevTransform: positionFix,\r\n            currentTransform: positionFix,\r\n            distance: null,\r\n            smooth: true\r\n        })\r\n    }\r\n    const zoomPanHandler = (state) => {\r\n        const {x, y} = {\r\n            x: zoom.origin.x + (state.delta[0]/10)*zoom.scale, \r\n            y: zoom.origin.y + (state.delta[1]/10)*zoom.scale\r\n        }\r\n        setZoom({\r\n            ...zoom,\r\n            smooth: false,\r\n            origin: {x, y}\r\n        })\r\n    }\r\n    const genericOptions = {\r\n        domTarget: slideContainerRef,\r\n        filterTaps: true,\r\n        eventOptions: {\r\n            passive: false\r\n        }\r\n    }\r\n    const bind = useGesture(\r\n        {\r\n            onDragStart: (state) => {\r\n                moveStartHandeler()\r\n            },\r\n            onDrag: (state) => {\r\n                if(state.event.touches && state.event.touches.length > 1){return}\r\n                if(state.tap){\r\n                    if(state.event.touches)return\r\n                    console.log(state)\r\n                    const targetRect = containerRef.current.getBoundingClientRect()\r\n                    const clientPosition = {x: state.initial[0], y: state.initial[1]}\r\n                    const targetOffset = {x: targetRect.x, y: targetRect.y}\r\n                    const imageRect = zoomRef.current.getBoundingClientRect();\r\n                    const imageOffset = {x: imageRect.x  - targetOffset.x, y: imageRect.y - targetOffset.y}\r\n                    const cursorOnImage = {\r\n                        x: ((clientPosition.x - targetOffset.x - imageOffset.x)*100)/imageRect.width, \r\n                        y: ((clientPosition.y - targetOffset.y - imageOffset.y)*100)/imageRect.height\r\n                    }\r\n                    const dotOrigin = {\r\n                        x: clientPosition.x - targetOffset.x, \r\n                        y: clientPosition.y - targetOffset.y\r\n                    }\r\n                    console.log({...imageOffset})\r\n                    const scale = zoom.scale == 1 ? 2 : 1;\r\n                    const zoomStatus = scale > 1 ? true : false;\r\n                    setZoom({...zoom, \r\n                        smooth: true,\r\n                        origin: cursorOnImage, \r\n                        dotOrigin, scale, \r\n                        zoom:zoomStatus})\r\n                }\r\n                else{\r\n                    moveHandler(state, {moveSpeed: 2, direction: 1})\r\n                }\r\n            },\r\n            onDragEnd: (state) => moveEndHandler(state),\r\n            onPinch: state => {\r\n                const targetRect = containerRef.current.getBoundingClientRect()\r\n                const currentImg = zoomRef.current.getBoundingClientRect()\r\n                const imgOffset = {x: currentImg.x - targetRect.x, y: currentImg.y - targetRect.y}\r\n\r\n                let dotOrigin = zoom.dotOrigin;\r\n\r\n                let initialOrigin = zoom.initialOrigin\r\n                dotOrigin = {\r\n                    x: (state.origin[0] - targetRect.x), \r\n                    y: (state.origin[1] - targetRect.y),\r\n                }\r\n                if(!zoom.initialOrigin){\r\n                    initialOrigin = {\r\n                        x: ((dotOrigin.x - imgOffset.x)*100)/currentImg.width, \r\n                        y: ((dotOrigin.y - imgOffset.y)*100)/currentImg.height,\r\n                    };\r\n                    let origin = initialOrigin\r\n                    return setZoom({...zoom, initialOrigin, dotOrigin, origin, smooth: false})\r\n                }\r\n                else{\r\n                    const pinchDistance = state.da[0]\r\n                    let scale = pinchDistance / 100\r\n                    const difference = {x: dotOrigin.x - zoom.dotOrigin.x, y: dotOrigin.y - zoom.dotOrigin.y}\r\n                    let position = {x: 0, y: 0}\r\n                    position = {\r\n                        x: zoom.position.x + (((difference.x)*100)/currentImg.width),\r\n                        y: zoom.position.y + (((difference.y)*100)/currentImg.height),\r\n                    }\r\n                    setZoom({...zoom, \r\n                        position: position,\r\n                        dotOrigin,\r\n                        scale\r\n                    })\r\n                }\r\n            },\r\n            onPinchEnd: state => {\r\n                setZoom({...zoomDefault, smooth: true})\r\n            },\r\n            onWheelStart: state => {\r\n                moveStartHandeler()\r\n            },\r\n            onWheel: (state) => {\r\n                if(state.direction[0] != 0){\r\n                    state.event.preventDefault()\r\n                }\r\n                moveHandler(state, {moveSpeed: 1.5, direction: -1})\r\n            },\r\n            onWheelEnd: state => {\r\n                moveEndHandler(state)\r\n            },\r\n            onMove: state => {\r\n                if(!zoom.zoom)return\r\n                zoomPanHandler(state)\r\n            },\r\n        },\r\n        {...genericOptions},\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(zoom.zoom){\r\n            document.querySelector(\".App\").style.overflow = \"hidden\"\r\n        }\r\n        else{\r\n            document.querySelector(\".App\").style.overflow = \"unset\"\r\n        }\r\n      }, [zoom])\r\n\r\n    useEffect(() => {\r\n        slideTo(props.currentSlide)\r\n      }, [props])\r\n\r\n      useEffect(bind, [bind])\r\n    return(\r\n            <div \r\n                id=\"container_main\"\r\n                ref={containerRef}\r\n                className={`${styles.container} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            >\r\n                {/* <div\r\n                    style={{\r\n                        height: \"10px\",\r\n                        width: \"10px\",\r\n                        borderRadius: \"10px\",\r\n                        backgroundColor: \"red\",\r\n                        position: \"absolute\",\r\n                        zIndex: 999,\r\n                        top: zoom.dotOrigin.y,\r\n                        left: zoom.dotOrigin.x\r\n                    }}\r\n                >\r\n                </div> */}\r\n            {arrowPrev()}\r\n            <div \r\n                // {...bind()}\r\n                id={\"slideContainer\"}\r\n                className={`${styles.slideContainer} ${slidePosition.smooth ? styles.smoothSlide : \"\"} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n                ref={slideContainerRef}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    transform: `translateX(${slidePosition.currentTransform}%)`\r\n                }}\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            {arrowNext()}\r\n            {/* <div\r\n            style={{\r\n                position: \"fixed\",\r\n                right: 0,\r\n                bottom: 0,\r\n                background: \"white\",\r\n                border: \"2px solid\",\r\n                padding: \"15px\",\r\n                zIndex: 999\r\n            }}>\r\n                <p>mobile: {mobile ? \"TRUE\" : \"FALSE\"}</p>\r\n            </div> */}\r\n            <div className={styles.dotContainer}>\r\n                {dots(props.images)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel","import React from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({\r\n    index: 0, \r\n    initialTransform: 0})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Carousel \r\n          currentSlide={currentSlide.index}\r\n          initialTransform={currentSlide.initialTransform}\r\n          images={images}\r\n        />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            // var slideContainer = document.getElementById(\"slideContainer\");\r\n                            // slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"showOverflow\":\"css_showOverflow__3ap7Y\",\"smoothSlide\":\"css_smoothSlide__2wZ2G\",\"container\":\"css_container__3i3vU\",\"arrowNext\":\"css_arrowNext__2BkGJ\",\"arrowPrev\":\"css_arrowPrev__3ROEp\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"imgContainer\":\"css_imgContainer__2auMe\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotContainer\":\"css_dotContainer__u_0OB\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};"],"sourceRoot":""}