{"version":3,"sources":["components/Carousel.js","App.js","index.js","components/css/index.module.scss"],"names":["Carousel","props","zoomDefault","zoomedIn","zoomIndex","zoomPower","x","y","startX","startY","slideTo","React","useRef","index","newTransfrom","images","length","setSlidePosition","slidePosition","currentSlide","currentTransform","prevTransform","zoom","containerRef","useState","initialTransform","scale","distance","origin","setZoom","bind","useGesture","onDragEnd","state","direction","positionFix","slideCount","slideWidth","dragEndHandler","movement","onDrag","containerWidth","current","clientWidth","transform","onPinchStart","onPinch","da","clientHeight","useEffect","ref","className","styles","container","id","slideContainer","style","width","map","image","slide","key","draggable","src","alt","button_zoom","onClick","hi","position","right","bottom","display","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","document","getElementById","classList","add","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.c6baf412.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDrag, useMove, useGesture } from 'react-use-gesture'\r\n\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const zoomDefault =  {\r\n        zoomedIn: null,\r\n        zoomIndex: null,\r\n        zoomPower: 1,\r\n        x: 0,\r\n        y: 0,\r\n        startX: null,\r\n        startY: null,\r\n    }\r\n    // const [cursorPosition, setCursorPosition] = React.useState({\r\n    //       isDown: null,\r\n    //       startX: null,\r\n    //       cursorMove: 0,\r\n    //       transform: 0,\r\n    //       prevTransform: props.initialTransform,\r\n    //       currentSlide: props.index,\r\n    //       zoom: {...zoomDefault},\r\n    //       pinchStart: {\r\n    //           x1: 0,\r\n    //           x2: 0,\r\n    //           y1: 0,\r\n    //           y2: 0,\r\n    //       }\r\n    //     });\r\n\r\n    const zoomRef = React.useRef(null)\r\n    const currentSlideRef = React.useRef(null)\r\n\r\n    const slideTo = (index) => {\r\n        const newTransfrom = -((100 / props.images.length) * index)\r\n        setSlidePosition({\r\n            ...slidePosition,\r\n            currentSlide: index,\r\n            currentTransform: newTransfrom,\r\n            prevTransform: newTransfrom,\r\n            zoom: {...zoomDefault}\r\n        })\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === slidePosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n\r\n\r\n\r\n\r\n    const renderImages = (data) => {\r\n        return data.map((image, index) => {\r\n        return (\r\n            <div\r\n            className={styles.slide}\r\n            // ref={cursorPosition.currentSlide === image.index ? currentSlideRef : null }\r\n            key={`${image}-${index}`}\r\n            style={{width: `${100 / props.images.length}%`}}\r\n            >                       \r\n                <img \r\n                    draggable={false}\r\n                    // ref={cursorPosition.currentSlide === image.index ? zoomRef : null}\r\n                    style={{transform: `scale(${zoom.scale})`}}\r\n                        // {transform: \r\n                        // `scale(${zoom.scale}) \r\n                        // translate(${zoom.zoom.x}%, \r\n                        // ${zoom.zoom.y}%)\r\n                        // `} \r\n                        // : {}}\r\n                    src={image.src}\r\n                    alt={image.src}\r\n                />\r\n            </div>\r\n        )\r\n        })\r\n    }\r\n          \r\n    const containerRef = React.useRef()\r\n    const [slidePosition, setSlidePosition] = React.useState({\r\n        currentSlide: props.currentSlide,\r\n        prevTransform: props.initialTransform,\r\n        currentTransform: props.initialTransform\r\n    })\r\n    const [zoom, setZoom] = React.useState({\r\n        zoom: false,\r\n        scale: 1,\r\n        distance: 0,\r\n        origin: 0\r\n    })\r\n\r\n    const dragEndHandler = (x) => {\r\n        if(zoom.zoom){return}\r\n        const direction = x < 0 ? 1 : -1\r\n\r\n        var positionFix = slidePosition.currentTransform;\r\n        var slideCount = props.images.length;\r\n        var slideWidth = 100 / slideCount;\r\n        var index = null\r\n\r\n        if (positionFix > 0) {\r\n          positionFix = 0;\r\n          index = 0;\r\n        } \r\n        if (positionFix < slideWidth - 100) {\r\n            positionFix = (slideWidth - 100);\r\n            index = slideCount - 1;\r\n        } \r\n        else {\r\n        index = slidePosition.currentSlide + direction;\r\n        // console.log({currentSlide: slidePosition.currentSlide, next: index, direction, x})\r\n            if(index < 0){index = 0}\r\n            if(index > slideCount - 1){index = slideCount -1 }\r\n            positionFix = -((index) * (100 / slideCount));\r\n        }\r\n        return setSlidePosition({\r\n            ...slidePosition, \r\n            currentSlide: index,\r\n            // prevTransform: slidePosition.currentTransform,\r\n            prevTransform: positionFix,\r\n            currentTransform: positionFix,\r\n        })\r\n    }\r\n\r\n    const bind = useGesture(\r\n        {\r\n            onDragEnd: (state) => dragEndHandler(state.movement[0]),\r\n            // onDrag: ({movement: [mx, my]}) => {\r\n            onDrag: (state) => {\r\n                if(zoom.zoom){return}\r\n                // console.log(state)\r\n                // state.event.stopPropagation()\r\n                  const containerWidth = containerRef.current.clientWidth;\r\n                  const slideCount = props.images.length\r\n                  let  transform = slidePosition.prevTransform + ((state.movement[0] * 100 / containerWidth) / slideCount)\r\n\r\n                //   transform = transform.toFixed(2)\r\n                //   console.log({transform})\r\n                //   console.log({...slidePosition})\r\n                  return setSlidePosition({ \r\n                    ...slidePosition,  \r\n                    currentTransform: transform,\r\n                    })\r\n            },\r\n            onPinchStart: state => {\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: true\r\n                })\r\n            },\r\n            onPinch: state => {\r\n                // console.log(state.da[0])\r\n                const pinchDistance = state.da[0]\r\n                const containerHeight = containerRef.current.clientHeight;\r\n                const scale = 1 + (pinchDistance * 100 / containerHeight)\r\n                setZoom({\r\n                    ...zoom,\r\n                    distance: state.da[0],\r\n                    scale\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        slideTo(props.currentSlide)\r\n      }, [props])\r\n\r\n    return(\r\n            <div \r\n                ref={containerRef}\r\n                className={styles.container}\r\n            >\r\n            <div \r\n                {...bind()}\r\n                id=\"slideContainer\"\r\n                className={styles.slideContainer}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    // transform: `translateX(${-cursorPosition.transform}%)`\r\n                    transform: `translateX(${slidePosition.currentTransform}%)`\r\n                }}\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            <button \r\n            className={styles.button_zoom}\r\n            onClick={() => {\r\n                setSlidePosition({\r\n                    ...slidePosition,\r\n                    hi: !slidePosition.hi\r\n                })\r\n                // let zoomedIn = null\r\n                // const countZoom = () => {\r\n                //     let zoomPower = cursorPosition.zoom.zoomPower + 1\r\n                //     zoomedIn = true\r\n                //     if(zoomPower > 3){\r\n                //         zoomPower = 1\r\n                //         zoomedIn = false\r\n                //     }\r\n                //     return {zoomPower, zoomedIn}\r\n                // }\r\n                // const zoom = countZoom()\r\n                // setCursorPosition({\r\n                //     ...cursorPosition, \r\n                //     zoom: {\r\n                //         ...cursorPosition.zoom,\r\n                //         zoomedIn: zoom.zoomedIn,\r\n                //         zoomPower: zoom.zoomPower,\r\n                //         zoomIndex: cursorPosition.currentSlide,\r\n                //         y: 0,\r\n                //         x: 0\r\n                //     }\r\n                // })\r\n            }}>enlarge</button>\r\n            <div\r\n            style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                display: \"flex\"\r\n            }}>\r\n                <span >distance: {zoom.distance} | </span>\r\n                <span>origin: {zoom.origin} | </span>\r\n                <span>scale: {zoom.scale} | </span>\r\n            </div>\r\n            {/* {dots(props.images)} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n\r\n\r\n  ","import React, { useEffect } from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({\r\n    index: 0, \r\n    initialTransform: 0})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Carousel \r\n        currentSlide={currentSlide.index}\r\n        initialTransform={currentSlide.initialTransform}\r\n        images={images}\r\n      />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            var slideContainer = document.getElementById(\"slideContainer\");\r\n                            slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"container\":\"css_container__3i3vU\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};"],"sourceRoot":""}