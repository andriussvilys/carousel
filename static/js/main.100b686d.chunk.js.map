{"version":3,"sources":["components/Carousel.js","App.js","index.js","components/css/index.module.scss"],"names":["Carousel","props","zoomRef","React","useRef","slideTo","index","newTransfrom","images","length","delay","zoom","setZoom","zoomDefault","setTimeout","setSlidePosition","slidePosition","currentSlide","currentTransform","prevTransform","containerRef","slideContainerRef","useState","smooth","initialTransform","pinch","scale","distance","origin","position","x","y","moveStartHandeler","state","console","log","moveHandler","options","containerWidth","current","clientWidth","slideCount","slideWidth","transform","movement","direction","moveSpeed","Math","abs","round","moveEndHandler","positionFix","zoomHandler","container","slideContainer","zoomedImage","offset","getBoundingClientRect","imgToSlideHeightRatio","top","clientHeight","imgToSlideWidthRatio","marginY","middleGuideY","panY","event","touches","clientY","cursorPositionX","xy","panX","zoomPanHandler","genericOptions","domTarget","eventOptions","passive","bind","useGesture","onDragStart","onDrag","onDragEnd","onPinchStart","onPinch","pinchDistance","da","window","innerHeight","zoomStatus","onPinchEnd","onWheelStart","onWheel","preventDefault","onWheelEnd","onMove","useEffect","document","querySelector","style","overflow","ref","className","styles","showOverflow","id","smoothSlide","width","map","image","slide","key","src","alt","button_zoom","onClick","newZoom","newScale","right","bottom","background","border","padding","imageList","dots","dot","dot_active","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.100b686d.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDrag, useMove, useGesture } from 'react-use-gesture'\r\n\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const zoomRef = React.useRef(null)\r\n    const currentSlideRef = React.useRef(null)\r\n\r\n    const slideTo = (index) => {\r\n        const newTransfrom = -((100 / props.images.length) * index)\r\n        let delay = zoom.zoom ? 400 : 0\r\n        if(zoom.zoom){\r\n            setZoom({...zoomDefault})\r\n        }\r\n        setTimeout(() => {            \r\n            setSlidePosition({\r\n                ...slidePosition,\r\n                currentSlide: index,\r\n                currentTransform: newTransfrom,\r\n                prevTransform: newTransfrom,\r\n            })\r\n        }, delay);\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === slidePosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n\r\n    const renderImages = (data) => {\r\n        return data.map((image, index) => {\r\n        return (\r\n            <div\r\n            className={`${styles.slide} ${zoom.pinch ? styles.showOverflow : \"\"} ${zoom.smooth ? styles.smoothSlide : \"\"}`}\r\n            // ref={cursorPosition.currentSlide === image.index ? currentSlideRef : null }\r\n            key={`${image}-${index}`}\r\n            // style={{width: `${100 / props.images.length}%`}}\r\n            style={{width: `${100 / props.images.length}%`}}\r\n            // style={slidePosition.currentSlide === image.index ? \r\n            //     {width: `${100 / props.images.length}%`, \r\n            //     transform: `scale(${zoom.scale})`} : \r\n            //     {width: `${100 / props.images.length}%`}}\r\n            >                    \r\n                {/* <div className={styles.imgContainer}> */}\r\n                    <img \r\n                        // draggable={false}\r\n                        style={slidePosition.currentSlide === image.index ? \r\n                            {transform: `scale(${zoom.scale}) translate(${zoom.position.x}%, ${zoom.position.y}%)`} : {}}\r\n                        // style={zoom.zoom ? \r\n                        //     {transform: \r\n                        //     `translate(${zoom.position.x}%, \r\n                        //     ${zoom.position.y}%)`} \r\n                        //     : {}}\r\n                        // style={zoom.zoom ? \r\n                        //     {transform: \r\n                        //     `translate(${zoom.position.x}%, \r\n                        //     ${zoom.position.y}%)`} \r\n                        //     : {}}\r\n                        className={`${zoom.smooth ? styles.smoothSlide : \"\"}`}\r\n                        ref={slidePosition.currentSlide === image.index ? zoomRef : null}\r\n                        src={image.src}\r\n                        alt={image.src}\r\n                    />\r\n                {/* </div>    */}\r\n            </div>\r\n        )\r\n        })\r\n    }\r\n          \r\n    const containerRef = React.useRef()\r\n    const slideContainerRef = React.useRef()\r\n    const [slidePosition, setSlidePosition] = React.useState({\r\n        smooth: true,\r\n        currentSlide: props.currentSlide,\r\n        prevTransform: props.initialTransform,\r\n        currentTransform: props.initialTransform\r\n    })\r\n    const zoomDefault =  {\r\n        pinch: null,\r\n        zoom: null,\r\n        smooth: true,\r\n        scale: 1,\r\n        distance: 0,\r\n        origin: 0,\r\n        position: {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    }\r\n    const [zoom, setZoom] = React.useState({...zoomDefault})\r\n\r\n    const moveStartHandeler = (state) => {\r\n        console.log(\"START MOVE\")\r\n        // setSlidePosition({\r\n        //     ...slidePosition,\r\n        //     smooth: false\r\n        // })\r\n    }\r\n    const moveHandler = (state, options) => {\r\n        console.log(\"MOVE\")\r\n        if(zoom.zoom){\r\n            console.log(\"zoom\")\r\n        return}\r\n          const containerWidth = containerRef.current.clientWidth;\r\n          const slideCount = props.images.length\r\n          const slideWidth = 100 / slideCount\r\n          let  transform = slidePosition.prevTransform + ((state.movement[0] * options.direction * options.moveSpeed * 100 / containerWidth) / slideCount)\r\n\r\n        if(transform > 0){\r\n            transform = 0\r\n        }\r\n        if(transform < -100 + slideWidth){\r\n            transform = -100 + slideWidth\r\n        }\r\n        var index = Math.abs(Math.round(transform/slideWidth))\r\n        index = index > slideCount - 1 ? slideCount - 1 : index\r\n\r\n          return setSlidePosition({ \r\n            ...slidePosition,  \r\n            currentSlide: index,\r\n            currentTransform: transform,\r\n            smooth: false\r\n            })\r\n    }\r\n    const moveEndHandler = (state) => {\r\n        if(zoom.zoom){\r\n            console.log(\"zoom\")\r\n        return}\r\n\r\n        var positionFix = slidePosition.currentTransform;\r\n        var slideCount = props.images.length;\r\n        var slideWidth = 100 / slideCount;\r\n        positionFix = positionFix > 0 ? 0 : positionFix\r\n        // var index = Math.abs(Math.round(positionFix/slideWidth))\r\n        // index = index > props.images.length - 1 ? props.images.length - 1 : index\r\n        const index = slidePosition.currentSlide\r\n\r\n        positionFix = (0 - (slideWidth * index))\r\n\r\n        return setSlidePosition({\r\n            ...slidePosition, \r\n            // currentSlide: index,\r\n            // prevTransform: slidePosition.currentTransform,\r\n            prevTransform: positionFix,\r\n            currentTransform: positionFix,\r\n            distance: null,\r\n            smooth: true\r\n        })\r\n    }\r\n    const zoomPanHandler = (state) => {\r\n        // console.log(state.event.type)\r\n        const container = containerRef.current\r\n        const slideContainer = slideContainerRef.current\r\n        const zoomedImage = zoomRef.current\r\n        const slideCount = props.images.length\r\n        // const containerRect = container.getBoundingClientRect()\r\n        // const containerOffset = {\r\n        //     x: containerRect.x,\r\n        //     y: containerRect.y\r\n        // }\r\n        // const transform = {\r\n        //     x: state.xy[0] - containerOffset.x,\r\n        //     y: state.xy[1] - containerOffset.y\r\n        // }\r\n\r\n        const offset = {y: container.getBoundingClientRect().y, x: container.getBoundingClientRect().x, top: container.getBoundingClientRect().top}\r\n\r\n        const imgToSlideHeightRatio = zoomedImage.clientHeight * 100 / slideContainer.clientHeight\r\n        const imgToSlideWidthRatio = zoomedImage.clientWidth * 100 / (slideContainer.clientWidth / slideCount)\r\n        \r\n        const visibleSectionY = imgToSlideHeightRatio / zoom.scale\r\n        const marginY = ((100 - visibleSectionY) / 2) + 10\r\n        const middleGuideY = slideContainer.clientHeight / 2\r\n        let y = state.event.touches ? state.event.touches[0].clientY - offset.y : state.event.clientY - offset.y;\r\n        let moveY = y - middleGuideY\r\n        let panY = (moveY * marginY / middleGuideY)\r\n        // let panY = (moveY * marginY / middleGuideY).toFixed(2)\r\n\r\n        // console.log({panY, y, middleGuideY, offsetY: offset.y, offsetTop: offset.top})\r\n\r\n        const visibleSectionX = imgToSlideWidthRatio / zoom.scale\r\n        // const marginX = ((100 - visibleSectionX) / 2) + 10\r\n        // const middleGuideX = (slideContainer.clientWidth / slideCount) / 2\r\n        // let x = state.event.touches ? state.event.touches[0].clientX - offset.x : state.event.clientX - offset.x\r\n        // let moveX = state.xy[0] - middleGuideX\r\n        // let panX = (moveX * marginX / middleGuideX)\r\n\r\n\r\n        const startX = (container.clientWidth / 2)\r\n        let cursorPositionX = (state.xy[0] - offset.x)\r\n        // const transformX = (cursorPositionX - startX) * 100 / zoomedImage.clientWidth / zoom.scale\r\n        // let panX = transformX\r\n\r\n        const panX = ((50 / (container.clientWidth / 2)) * cursorPositionX) - 50\r\n        console.log({panX, cursorPositionX})\r\n        // console.log({startX, transformX, cursorPositionX, imgWidth: zoomedImage.clientWidth, visible: visibleSectionX})\r\n        console.log(state)\r\n        setZoom({\r\n            ...zoom,\r\n            smooth: null,\r\n            position: {\r\n                // y: 0,\r\n                x: panX,\r\n                y: panY\r\n            }\r\n        })\r\n    }\r\n    const zoomHandler = (state) => {\r\n        if(!zoom.zoom || zoom.pinch){\r\n            return\r\n        }\r\n        zoomPanHandler(state)\r\n    }\r\n\r\n\r\n\r\n\r\n    const genericOptions = {\r\n        // filterTaps: true,\r\n        domTarget: slideContainerRef,\r\n        eventOptions: {\r\n            passive: false\r\n        }\r\n        // threshold: 10\r\n    }\r\n    const bind = useGesture(\r\n        {\r\n            onDragStart: () => {\r\n                moveStartHandeler()\r\n            },\r\n            onDrag: (state) => {\r\n                moveHandler(state, {moveSpeed: 2, direction: 1})\r\n            },\r\n            onDragEnd: (state) => moveEndHandler(state),\r\n            onPinchStart: state => {\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: true\r\n                })\r\n            },\r\n            onPinch: state => {\r\n                // console.log(state.da[0])\r\n                // zoomPanHandler(state)\r\n                const pinchDistance = state.da[0]\r\n                const containerHeight = containerRef.current.clientHeight;\r\n                const maxHeight = window.innerHeight\r\n                const imgToWindowRatio = maxHeight / zoomRef.current.clientHeight\r\n                const maxZoom = zoomRef.clientHeight\r\n                let scale = pinchDistance / 100\r\n                let zoomStatus = true\r\n                if(scale <= 1){\r\n                    scale = 1\r\n                    zoomStatus = false\r\n                }\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: zoomStatus,\r\n                    pinch: true,\r\n                    distance: state.da[0],\r\n                    scale,\r\n                    position: {\r\n                        x: state.xy[0],\r\n                        y: state.xy[1]\r\n                    }\r\n                })\r\n            },\r\n            onPinchEnd: state => {\r\n                setZoom({...zoomDefault})\r\n            },\r\n            onWheelStart: () => {\r\n                moveStartHandeler()\r\n            },\r\n            onWheel: (state) => {\r\n                state.event.preventDefault()\r\n                console.log(state.event)\r\n                moveHandler(state, {moveSpeed: 1.5, direction: -1})\r\n            },\r\n            onWheelEnd: state => {\r\n                moveEndHandler(state)\r\n            },\r\n            onMove: state => {\r\n                zoomHandler(state)\r\n            },\r\n            // onMoveEnd: state => {\r\n            //     setZoom({\r\n            //         ...zoom,\r\n            //         position: {\r\n            //             x: 0,\r\n            //             y: 0\r\n            //         }\r\n            //     })\r\n            // }\r\n        },\r\n        {...genericOptions},\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(zoom.pinch){\r\n            document.querySelector(\".App\").style.overflow = \"hidden\"\r\n        }\r\n        else{\r\n            document.querySelector(\".App\").style.overflow = \"unset\"\r\n        }\r\n      }, [zoom])\r\n\r\n    useEffect(() => {\r\n        console.log(\"props change\")\r\n        slideTo(props.currentSlide)\r\n      }, [props])\r\n\r\n      useEffect(bind, [bind])\r\n\r\n    // useEffect(() => {\r\n    //     slideTo(props.currentSlide)\r\n    //   }, [props])\r\n\r\n    return(\r\n            <div \r\n                ref={containerRef}\r\n                className={`${styles.container} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            >\r\n            <div \r\n                // {...bind()}\r\n                id={\"slideContainer\"}\r\n                className={`${styles.slideContainer} ${slidePosition.smooth ? styles.smoothSlide : \"\"} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n                ref={slideContainerRef}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    // transform: `translateX(${-cursorPosition.transform}%)`\r\n                    transform: `translateX(${slidePosition.currentTransform}%)`\r\n                }}\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            <button \r\n            className={styles.button_zoom}\r\n            onClick={() => {\r\n                let newScale = zoom.scale + 1\r\n                let newZoom = true\r\n                newScale = newScale > 3 ? 1 : newScale\r\n                newZoom = newScale === 1 ? false : true\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: newZoom,\r\n                    scale: newScale,\r\n                    smooth: true\r\n                })\r\n                // let zoomedIn = null\r\n                // const countZoom = () => {\r\n                //     let zoomPower = cursorPosition.zoom.zoomPower + 1\r\n                //     zoomedIn = true\r\n                //     if(zoomPower > 3){\r\n                //         zoomPower = 1\r\n                //         zoomedIn = false\r\n                //     }\r\n                //     return {zoomPower, zoomedIn}\r\n                // }\r\n                // const zoom = countZoom()\r\n                // setCursorPosition({\r\n                //     ...cursorPosition, \r\n                //     zoom: {\r\n                //         ...cursorPosition.zoom,\r\n                //         zoomedIn: zoom.zoomedIn,\r\n                //         zoomPower: zoom.zoomPower,\r\n                //         zoomIndex: cursorPosition.currentSlide,\r\n                //         y: 0,\r\n                //         x: 0\r\n                //     }\r\n                // })\r\n            }}>enlarge</button>\r\n            <div\r\n            style={{\r\n                position: \"fixed\",\r\n                right: 0,\r\n                bottom: 0,\r\n                background: \"white\",\r\n                border: \"2px solid\",\r\n                padding: \"15px\"\r\n            }}>\r\n                <p >distance: {zoom.distance}</p>\r\n                <p>scale: {zoom.scale}</p>\r\n                <p>zoom: {zoom.zoom ? \"true\" : \"false\"}</p>\r\n                <p>postion: </p>\r\n                <p>x: {zoom.position.x} | y: {zoom.position.y}</p>\r\n            </div>\r\n            {dots(props.images)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n\r\n\r\n  ","import React, { useEffect } from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({\r\n    index: 0, \r\n    initialTransform: 0})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Carousel \r\n        currentSlide={currentSlide.index}\r\n        initialTransform={currentSlide.initialTransform}\r\n        images={images}\r\n      />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            // var slideContainer = document.getElementById(\"slideContainer\");\r\n                            // slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"showOverflow\":\"css_showOverflow__3ap7Y\",\"smoothSlide\":\"css_smoothSlide__2wZ2G\",\"container\":\"css_container__3i3vU\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"imgContainer\":\"css_imgContainer__2auMe\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};"],"sourceRoot":""}