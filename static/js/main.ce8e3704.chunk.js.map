{"version":3,"sources":["components/css/index.module.scss","components/Carousel.js","App.js","index.js"],"names":["module","exports","Carousel","props","zoomDefault","zoomedIn","zoomIndex","zoomPower","x","y","startX","startY","React","useState","isDown","cursorMove","transform","prevTransform","initialTransform","currentSlide","index","zoom","cursorPosition","setCursorPosition","zoomRef","useRef","currentSlideRef","startHandle","e","preventDefault","container","document","querySelector","styles","slideContainer","classList","remove","left","touches","pageX","offsetLeft","moveHandle","length","Math","hypot","pageY","console","log","window","innerWidth","add","disableBodyScroll","current","zoomedImage","offset","getBoundingClientRect","top","imgToSlideHeightRatio","clientHeight","imgToSlideWidthRatio","clientWidth","marginY","middleGuideY","panY","clientY","toFixed","marginX","middleGuideX","panX","clientX","endHandle","zoomIn","abs","direction","positionFix","slideCount","images","slideWidth","countZoom","useEffect","className","id","style","width","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onMouseOut","setTimeout","onTouchEnd","map","image","slide","ref","key","src","alt","button_zoom","onClick","imageList","dots","newTransfrom","slideTo","dot","dot_active","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ce8e3704.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"container\":\"css_container__3i3vU\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\",\"zoomOut\":\"css_zoomOut__Rt9JG\"};","import React, { useEffect } from 'react'\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const zoomDefault =  {\r\n        zoomedIn: null,\r\n        zoomIndex: null,\r\n        zoomPower: 1,\r\n        x: 0,\r\n        y: 0,\r\n        startX: null,\r\n        startY: null,\r\n    }\r\n    const [cursorPosition, setCursorPosition] = React.useState({\r\n          isDown: null,\r\n          startX: null,\r\n          cursorMove: 0,\r\n          transform: 0,\r\n          prevTransform: props.initialTransform,\r\n          currentSlide: props.index,\r\n        //   direction: null,\r\n          zoom: {...zoomDefault}\r\n        });\r\n\r\n    const slideTo = (index) => {\r\n        const newTransfrom = (100 / props.images.length) * index\r\n        setCursorPosition({\r\n            ...cursorPosition,\r\n            currentSlide: index,\r\n            transform: newTransfrom,\r\n            prevTransform: newTransfrom,\r\n            zoom: {...zoomDefault}\r\n        })\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === cursorPosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n\r\n    const zoomRef = React.useRef(null)\r\n    const currentSlideRef = React.useRef(null)\r\n\r\n        const startHandle = (e) => {\r\n            e.preventDefault();\r\n            const container = document.querySelector(`.${styles.container}`)\r\n            document.querySelector(`.${styles.slideContainer}`).classList.remove(\"smoothSlide\");\r\n            const left = e.touches ? e.touches[0].pageX: e.pageX;\r\n\r\n            setCursorPosition({\r\n                ...cursorPosition,\r\n                isDown: true,\r\n                startX: left - container.offsetLeft\r\n            })\r\n          };\r\n\r\n        const moveHandle = (e) => {\r\n            if(e.touches && e.touches.length > 1){\r\n                return setCursorPosition({\r\n                    ...cursorPosition,\r\n                    zoom: {\r\n                        ...cursorPosition.zoom,\r\n                        zoomPower: {\r\n                            zoomedIn: true,\r\n                            zoomPower: Math.hypot(e.touches[0].pageX - e.touches[1].pageX, e.touches[0].pageY - e.touches[1].pageY)\r\n                        }\r\n                    }\r\n                })\r\n                \r\n            }\r\n            if(cursorPosition.zoom.zoomedIn){\r\n                console.log(\"mouse move zoom in\")\r\n                e.preventDefault()\r\n                if(window.innerWidth < 720){\r\n                    document.querySelector(\"body\").classList.add(styles.disableBodyScroll)\r\n                }\r\n            //   const slideContainer = document.querySelector(`.${styles.slideContainer}`)\r\n            const slideContainer = currentSlideRef.current\r\n            const zoomedImage = zoomRef.current\r\n              const container = document.querySelector(`.${styles.container}`)\r\n              const offset = {y: container.getBoundingClientRect().y, x: container.getBoundingClientRect().x, top: container.getBoundingClientRect().top}\r\n\r\n              \r\n              const imgToSlideHeightRatio = zoomedImage.clientHeight * 100 / slideContainer.clientHeight\r\n              const imgToSlideWidthRatio = zoomedImage.clientWidth * 100 / slideContainer.clientWidth\r\n              \r\n              const visibleSectionY = imgToSlideHeightRatio / cursorPosition.zoom.zoomPower\r\n              const marginY = ((100 - visibleSectionY) / 2) + 10\r\n              const middleGuideY = slideContainer.clientHeight / 2\r\n              let y = e.touches ? e.touches[0].clientY - offset.y : e.clientY - offset.y;\r\n              let moveY = y - middleGuideY\r\n              let panY = (moveY * marginY / middleGuideY).toFixed(2)\r\n\r\n              const visibleSectionX = imgToSlideWidthRatio / cursorPosition.zoom.zoomPower\r\n              const marginX = ((100 - visibleSectionX) / 2)\r\n              const middleGuideX = slideContainer.clientWidth / 2\r\n              let x = e.touches ? e.touches[0].clientX - offset.x : e.clientX - offset.x\r\n              let moveX = x - middleGuideX\r\n              let panX = (moveX * marginX / middleGuideX).toFixed(2)\r\n\r\n                return setCursorPosition({\r\n                    ...cursorPosition, \r\n                    zoom:{...cursorPosition.zoom, \r\n                        y:panY, \r\n                        x: panX\r\n                    }\r\n                })\r\n            }\r\n            else if(!cursorPosition.isDown){return}\r\n            console.log(\"mouse move\")\r\n              e.preventDefault();\r\n              var slideContainer = document.querySelector(`.${styles.slideContainer}`);\r\n            const container = document.querySelector(`.${styles.container}`)\r\n\r\n              \r\n              const x = e.touches ? e.touches[0].pageX - container.offsetLeft: e.pageX - container.offsetLeft\r\n              const cursorMove = cursorPosition.startX - x\r\n              var walk = 100 * (cursorMove) / slideContainer.clientWidth;\r\n              var transform = walk + cursorPosition.prevTransform;\r\n            //   var direction = walk > 0 ? 1: -1;\r\n\r\n              setCursorPosition({\r\n                ...cursorPosition,\r\n                cursorMove,\r\n                transform: transform,\r\n                // direction: direction\r\n              })\r\n          };\r\n\r\n          var endHandle = (e) => {\r\n            const container = document.querySelector(`.${styles.slideContainer}`)\r\n            container.classList.add(\"smoothSlide\");\r\n            if(cursorPosition.zoom.zoomedIn){ \r\n                zoomIn()\r\n                document.querySelector(\"body\").classList.remove(styles.disableBodyScroll) \r\n                return\r\n            }\r\n            if(!cursorPosition.isDown){\r\n                return\r\n            }\r\n            if(Math.abs(cursorPosition.cursorMove) < 10){\r\n                zoomIn()\r\n                return\r\n            }\r\n\r\n            let direction = null\r\n            // if(Math.abs(cursorPosition.cursorMove) < 10){   \r\n            //     const xMiddleGuide = currentSlideRef.current.clientWidth / 2\r\n            //     direction = cursorPosition.startX > xMiddleGuide ? 1 : -1\r\n            //     console.log({startX: cursorPosition.startX, xMiddleGuide})\r\n            // }\r\n            direction = cursorPosition.cursorMove > 0 ? 1 : -1\r\n\r\n            console.log({cursorMove: cursorPosition.cursorMove, direction})\r\n\r\n            var positionFix = cursorPosition.transform;\r\n            var index = null;\r\n            var slideCount = props.images.length;\r\n            var slideWidth = 100 / slideCount;\r\n\r\n            if (positionFix > 0) {\r\n              positionFix = 0;\r\n              index = 0;\r\n            } \r\n            if (positionFix < slideWidth - 100) {\r\n                positionFix = slideWidth - 100;\r\n                index = slideCount - 1;\r\n            } \r\n            else {\r\n            index = cursorPosition.currentSlide + direction;\r\n                if(index < 0){index = 0}\r\n                if(index > slideCount - 1){index = slideCount -1 }\r\n                positionFix = (index) * (100 / slideCount);\r\n            }\r\n            setCursorPosition({\r\n            ...cursorPosition,\r\n            isDown: false,\r\n            cursorMove: 0,\r\n            transform: positionFix,\r\n            prevTransform: positionFix,\r\n            currentSlide: index\r\n            })\r\n          };\r\n\r\n        const renderImages = (data) => {\r\n            return data.map((image, index) => {\r\n            return (\r\n                <div\r\n                className={styles.slide}\r\n                ref={cursorPosition.currentSlide === image.index ? currentSlideRef : null }\r\n                key={`${image}-${index}`}\r\n                style={{width: `${100 / props.images.length}%`}}\r\n                >                       \r\n                    <img \r\n                        ref={cursorPosition.currentSlide === image.index ? zoomRef : null}\r\n                        // ref={cursorPosition.zoom.zoomedIn && cursorPosition.currentSlide === image.index ? zoomRef : null}\r\n                        style={cursorPosition.zoom.zoomedIn ? \r\n                            {transform: \r\n                            `scale(${cursorPosition.zoom.zoomPower}) \r\n                            translate(${cursorPosition.zoom.x}%, \r\n                            ${cursorPosition.zoom.y}%)`} \r\n                            : {}}\r\n                        // onClick={(e) => {\r\n                        //     e.stopPropagation()\r\n                        //     zoomIn()\r\n                        // }}\r\n                        src={image.src}\r\n                        alt={image.src}\r\n                    />\r\n                </div>\r\n            )\r\n            })\r\n        }\r\n\r\n        const zoomIn = () => {\r\n            console.log(\"ZOOM IN\")\r\n            let zoomedIn = null\r\n            const countZoom = () => {\r\n                let zoomPower = cursorPosition.zoom.zoomPower + 1\r\n                zoomedIn = true\r\n                if(zoomPower > 3){\r\n                    zoomPower = 1\r\n                    zoomedIn = false\r\n                }\r\n                return {zoomPower, zoomedIn}\r\n            }\r\n            const zoom = countZoom()\r\n            return setCursorPosition({\r\n                ...cursorPosition, \r\n                isDown: false,\r\n                zoom: {\r\n                    ...cursorPosition.zoom,\r\n                    zoomedIn: zoom.zoomedIn,\r\n                    zoomPower: zoom.zoomPower,\r\n                    zoomIndex: cursorPosition.currentSlide,\r\n                    y: 0,\r\n                    x: 0\r\n                }\r\n            })\r\n        }\r\n\r\n        const zoomOut = () => {\r\n            if(cursorPosition.zoom.zoomedIn){\r\n                zoomRef.current.classList.add(\"smoothSlide\")\r\n                setTimeout(() => {\r\n                    zoomRef.current.classList.remove(\"smoothSlide\")\r\n                }, 100);\r\n                setCursorPosition({\r\n                    ...cursorPosition,\r\n                    zoom: {...zoomDefault}\r\n                    // zoom: {\r\n                    //     ...cursorPosition.zoom,\r\n                    //     x: 0,\r\n                    //     y: 0\r\n                    // }\r\n                })\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            setCursorPosition({\r\n                ...cursorPosition,\r\n                direction: null,\r\n                transform: props.initialTransform,\r\n                prevTransform: props.initialTransform,\r\n                currentSlide: props.currentSlide,\r\n                zoom:{...zoomDefault}\r\n            })\r\n          }, [props])\r\n\r\n    return(\r\n            <div className={styles.container}>\r\n            <div \r\n                id=\"slideContainer\"\r\n                className={styles.slideContainer}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    transform: `translateX(${-cursorPosition.transform}%)`\r\n                }}\r\n                onMouseDown={(e) => {startHandle(e)} }\r\n                onTouchStart={(e) => {startHandle(e)} }\r\n                onMouseMove={(e) => {moveHandle(e)} }\r\n                onTouchMove={(e) => {moveHandle(e)} }\r\n                onMouseUp={(e) => {endHandle(e);} }\r\n                onMouseOut={(e) => {endHandle(e); \r\n                    zoomOut()\r\n                } }\r\n                onTouchEnd={(e) => {endHandle(e);} }\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            <button \r\n            className={styles.button_zoom}\r\n            onClick={() => {\r\n                let zoomedIn = null\r\n                const countZoom = () => {\r\n                    let zoomPower = cursorPosition.zoom.zoomPower + 1\r\n                    zoomedIn = true\r\n                    if(zoomPower > 3){\r\n                        zoomPower = 1\r\n                        zoomedIn = false\r\n                    }\r\n                    return {zoomPower, zoomedIn}\r\n                }\r\n                const zoom = countZoom()\r\n                setCursorPosition({\r\n                    ...cursorPosition, \r\n                    zoom: {\r\n                        ...cursorPosition.zoom,\r\n                        zoomedIn: zoom.zoomedIn,\r\n                        zoomPower: zoom.zoomPower,\r\n                        zoomIndex: cursorPosition.currentSlide,\r\n                        y: 0,\r\n                        x: 0\r\n                    }\r\n                })\r\n            }}>enlarge</button>\r\n            {dots(props.images)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n\r\n\r\n  ","import React, { useEffect } from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({index: null, initialTransform: null})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Carousel \r\n        currentSlide={currentSlide.index}\r\n        initialTransform={currentSlide.initialTransform}\r\n        images={images}\r\n      />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            var slideContainer = document.getElementById(\"slideContainer\");\r\n                            slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}