{"version":3,"sources":["components/Carousel.js","App.js","index.js","components/css/index.module.scss"],"names":["Carousel","props","containerRef","React","useRef","slideContainerRef","zoomRef","useState","window","document","body","getBoundingClientRect","width","mobile","setMobile","onresize","swiped","smooth","currentSlide","prevTransform","initialTransform","currentTransform","slidePosition","setSlidePosition","zoomDefault","pinch","zoom","scale","distance","origin","x","y","dotOrigin","initialOrigin","position","pinchDistance","setZoom","slideTo","index","slideToIndex","images","length","newTransfrom","delay","setTimeout","genericOptions","domTarget","filterTaps","eventOptions","passive","bind","useGesture","onDragStart","state","onDrag","console","log","tap","event","touches","targetRect","current","clientPosition","initial","targetOffset","imageRect","imageOffset","cursorOnImage","height","zoomStatus","onDragEnd","swipe","onPinch","preventDefault","currentImg","imgOffset","da","difference","onPinchEnd","onWheelStart","direction","onWheel","options","containerWidth","clientWidth","slideCount","slideWidth","transform","movement","moveSpeed","Math","abs","round","moveHandler","onWheelEnd","positionFix","moveEndHandler","onMove","delta","zoomPanHandler","useEffect","querySelector","style","overflow","id","ref","className","styles","container","showOverflow","arrowPrev","onClick","slideContainer","smoothSlide","zoomOut","map","image","slide","key","transformOrigin","src","alt","arrowNext","dotContainer","imageList","dots","dot","dot_active","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.93fdf9bd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useGesture } from 'react-use-gesture'\r\n\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const containerRef = React.useRef()\r\n    const slideContainerRef = React.useRef()\r\n    const zoomRef = React.useRef(null)\r\n    const [mobile, setMobile] = useState(window.document.body.getBoundingClientRect().width > 720 ? false : true)\r\n    function checkDocumentSize() {\r\n        setMobile(window.document.body.getBoundingClientRect().width > 720 ? false : true);\r\n    }\r\n    \r\n    window.onresize = checkDocumentSize;\r\n    \r\n    const [slidePosition, setSlidePosition] = useState({\r\n        swiped: false,\r\n        smooth: true,\r\n        currentSlide: props.currentSlide,\r\n        prevTransform: props.initialTransform,\r\n        currentTransform: props.initialTransform\r\n    })\r\n    const zoomDefault =  {\r\n        pinch: null,\r\n        zoom: null,\r\n        smooth: false,\r\n        scale: 1,\r\n        distance: 0,\r\n        origin: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        dotOrigin: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        initialOrigin: null,\r\n        position: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        pinchDistance: 0,\r\n    }\r\n    const [zoom, setZoom] = useState({...zoomDefault})\r\n    \r\n\r\n    const slideTo = (index) => {\r\n        let slideToIndex = index;\r\n        if(slideToIndex < 0){\r\n            slideToIndex = props.images.length - 1; \r\n        }\r\n        else if(slideToIndex > props.images.length - 1){\r\n            slideToIndex = 0;\r\n        }\r\n        const newTransfrom = -((100 / props.images.length) * slideToIndex)\r\n        let delay = zoom.zoom ? 250 : 0\r\n        if(zoom.zoom){\r\n            setZoom({...zoomDefault})\r\n        }\r\n        setTimeout(() => {            \r\n            setSlidePosition({\r\n                ...slidePosition,\r\n                currentSlide: slideToIndex,\r\n                currentTransform: newTransfrom,\r\n                prevTransform: newTransfrom,\r\n            })\r\n        }, delay);\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === slidePosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n    const arrowNext = () => {\r\n        if(mobile)return\r\n        return <div \r\n            className={styles.arrowNext}\r\n            onClick={() => {\r\n                slideTo(slidePosition.currentSlide + 1)\r\n            }}\r\n        ></div>\r\n    }\r\n    const arrowPrev = () => {\r\n        if(mobile)return\r\n        return <div \r\n            className={styles.arrowPrev}\r\n            onClick={() => {\r\n                slideTo(slidePosition.currentSlide - 1)\r\n            }}\r\n        ></div>\r\n    }\r\n\r\n    const renderImages = (data) => {\r\n        return data.map((image, index) => {\r\n        return (\r\n            <div\r\n            id={`SLIDE-${index}`}\r\n            className={`${styles.slide} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            key={`${image}-${index}`}\r\n            style={{width: `${100 / props.images.length}%`}}\r\n            >                    \r\n                <img \r\n                    style={slidePosition.currentSlide === index ? \r\n                        {transform: `scale(${zoom.scale}) translate(${zoom.position.x}%, ${zoom.position.y}%)`,\r\n                         transformOrigin: `${zoom.origin.x}% ${zoom.origin.y}%`\r\n                        } : {}}\r\n                    className={`${zoom.smooth && slidePosition.currentSlide === index ? styles.smoothSlide : \"\"}`}\r\n                    ref={slidePosition.currentSlide === index ? zoomRef : null}\r\n                    src={image.src}\r\n                    alt={image.src}\r\n                />\r\n            </div>\r\n        )\r\n        })\r\n    }\r\n\r\n    const moveStartHandeler = (state) => {\r\n    }\r\n    const moveHandler = (state, options) => {\r\n        if(zoom.zoom){return}\r\n          const containerWidth = containerRef.current.clientWidth;\r\n          const slideCount = props.images.length\r\n          const slideWidth = 100 / slideCount\r\n          let  transform = slidePosition.prevTransform + ((state.movement[0] * options.direction * options.moveSpeed * 100 / containerWidth) / slideCount)\r\n\r\n        if(transform > slideWidth/3){\r\n            return\r\n        }\r\n        if(transform < -100 + (slideWidth/3)*2){\r\n            return\r\n        }\r\n        var index = Math.abs(Math.round(transform/slideWidth))\r\n        index = index > slideCount - 1 ? slideCount - 1 : index\r\n\r\n          return setSlidePosition({ \r\n            ...slidePosition,  \r\n            currentSlide: index,\r\n            currentTransform: transform,\r\n            smooth: false\r\n            })\r\n    }\r\n    const moveEndHandler = (state) => {\r\n        if(zoom.zoom){\r\n        return}\r\n\r\n        var positionFix = slidePosition.currentTransform;\r\n        var slideCount = props.images.length;\r\n        var slideWidth = 100 / slideCount;\r\n        positionFix = positionFix > 0 ? 0 : positionFix\r\n        const index = slidePosition.currentSlide\r\n\r\n        positionFix = (0 - (slideWidth * index))\r\n\r\n        return setSlidePosition({\r\n            ...slidePosition, \r\n            prevTransform: positionFix,\r\n            currentTransform: positionFix,\r\n            distance: null,\r\n            smooth: true\r\n        })\r\n    }\r\n    const zoomPanHandler = (state) => {\r\n        const {x, y} = {\r\n            x: zoom.origin.x + (state.delta[0]/10)*zoom.scale, \r\n            y: zoom.origin.y + (state.delta[1]/10)*zoom.scale\r\n        }\r\n        setZoom({\r\n            ...zoom,\r\n            smooth: false,\r\n            origin: {x, y}\r\n        })\r\n    }\r\n    const genericOptions = {\r\n        domTarget: slideContainerRef,\r\n        filterTaps: true,\r\n        eventOptions: {\r\n            passive: false\r\n        }\r\n    }\r\n    const bind = useGesture(\r\n        {\r\n            onDragStart: (state) => {\r\n                moveStartHandeler()\r\n            },\r\n            onDrag: (state) => {\r\n                console.log(\"drag\")\r\n                if(state.tap){\r\n                    if(state.event.touches)return\r\n                    const targetRect = containerRef.current.getBoundingClientRect()\r\n                    const clientPosition = {x: state.initial[0], y: state.initial[1]}\r\n                    const targetOffset = {x: targetRect.x, y: targetRect.y}\r\n                    const imageRect = zoomRef.current.getBoundingClientRect();\r\n                    const imageOffset = {x: imageRect.x  - targetOffset.x, y: imageRect.y - targetOffset.y}\r\n                    const cursorOnImage = {\r\n                        x: ((clientPosition.x - targetOffset.x - imageOffset.x)*100)/imageRect.width, \r\n                        y: ((clientPosition.y - targetOffset.y - imageOffset.y)*100)/imageRect.height\r\n                    }\r\n                    const dotOrigin = {\r\n                        x: clientPosition.x - targetOffset.x, \r\n                        y: clientPosition.y - targetOffset.y\r\n                    }\r\n                    const scale = zoom.scale == 1 ? 2 : 1;\r\n                    const zoomStatus = scale > 1 ? true : false;\r\n                    setZoom({...zoom, \r\n                        smooth: true,\r\n                        origin: cursorOnImage, \r\n                        dotOrigin, scale, \r\n                        zoom:zoomStatus})\r\n                }\r\n                // else{\r\n                //     moveHandler(state, {moveSpeed: 2, direction: 1})\r\n                // }\r\n            },\r\n            onDragEnd: (state) => {\r\n                const index = slidePosition.currentSlide - state.swipe[0]\r\n                slideTo(index)\r\n            },\r\n            onPinch: state => {\r\n                // if(!mobile){return}\r\n                if(!mobile){state.event.preventDefault()}\r\n                const targetRect = containerRef.current.getBoundingClientRect()\r\n                const currentImg = zoomRef.current.getBoundingClientRect()\r\n                const imgOffset = {x: currentImg.x - targetRect.x, y: currentImg.y - targetRect.y}\r\n\r\n                let dotOrigin = zoom.dotOrigin;\r\n\r\n                let initialOrigin = zoom.initialOrigin\r\n                dotOrigin = {\r\n                    x: (state.origin[0] - targetRect.x), \r\n                    y: (state.origin[1] - targetRect.y),\r\n                }\r\n                if(!zoom.initialOrigin){\r\n                    initialOrigin = {\r\n                        x: ((dotOrigin.x - imgOffset.x)*100)/currentImg.width, \r\n                        y: ((dotOrigin.y - imgOffset.y)*100)/currentImg.height,\r\n                    };\r\n                    let origin = initialOrigin\r\n                    return setZoom({...zoom, initialOrigin, dotOrigin, origin, smooth: false})\r\n                }\r\n                else{\r\n                    const pinchDistance = state.da[0]\r\n                    let scale = pinchDistance / 100\r\n                    if(scale < 0.5){scale = 0.5}\r\n                    const difference = {x: dotOrigin.x - zoom.dotOrigin.x, y: dotOrigin.y - zoom.dotOrigin.y}\r\n                    let position = {x: 0, y: 0}\r\n                    position = {\r\n                        x: zoom.position.x + (((difference.x)*100)/currentImg.width),\r\n                        y: zoom.position.y + (((difference.y)*100)/currentImg.height),\r\n                    }\r\n                    setZoom({...zoom, \r\n                        position: position,\r\n                        dotOrigin,\r\n                        scale\r\n                    })\r\n                }\r\n            },\r\n            onPinchEnd: state => {\r\n                if(!mobile){state.event.preventDefault()}\r\n                setZoom({...zoomDefault, smooth: true, origin: zoom.initialOrigin})\r\n            },\r\n            onWheelStart: state => {\r\n                if(state.direction[0] != 0){\r\n                    state.event.preventDefault()\r\n                }\r\n                moveStartHandeler()\r\n            },\r\n            onWheel: (state) => {\r\n                if(state.direction[0] != 0){\r\n                    state.event.preventDefault()\r\n                }\r\n                moveHandler(state, {moveSpeed: 1.5, direction: -1})\r\n            },\r\n            onWheelEnd: state => {\r\n                state.event.preventDefault()\r\n                moveEndHandler(state)\r\n            },\r\n            onMove: state => {\r\n                if(!zoom.zoom)return\r\n                zoomPanHandler(state)\r\n            },\r\n        },\r\n        {...genericOptions},\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(!mobile){return}\r\n        if(zoom.zoom){\r\n            document.querySelector(\".App\").style.overflow = \"hidden\"\r\n        }\r\n        else{\r\n            document.querySelector(\".App\").style.overflow = \"unset\"\r\n        }\r\n      }, [zoom])\r\n\r\n    useEffect(() => {\r\n        slideTo(props.currentSlide)\r\n      }, [props])\r\n\r\n      useEffect(bind, [bind])\r\n    return(\r\n            <div \r\n                id=\"container_main\"\r\n                ref={containerRef}\r\n                className={`${styles.container} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            >\r\n                {/* <div\r\n                    style={{\r\n                        height: \"10px\",\r\n                        width: \"10px\",\r\n                        borderRadius: \"10px\",\r\n                        backgroundColor: \"red\",\r\n                        position: \"absolute\",\r\n                        zIndex: 999,\r\n                        top: zoom.dotOrigin.y,\r\n                        left: zoom.dotOrigin.x\r\n                    }}\r\n                >\r\n                </div> */}\r\n            {arrowPrev()}\r\n            <div \r\n                // {...bind()}\r\n                id={\"slideContainer\"}\r\n                className={`${styles.slideContainer} ${slidePosition.smooth ? styles.smoothSlide : \"\"} ${zoom.pinch ? styles.showOverflow : \"\"} ${zoom.zoom ? styles.zoomOut : \"\"}`}\r\n                ref={slideContainerRef}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    transform: `translateX(${slidePosition.currentTransform}%)`\r\n                }}\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            {arrowNext()}\r\n            {/* <div\r\n            style={{\r\n                position: \"fixed\",\r\n                right: 0,\r\n                bottom: 0,\r\n                background: \"white\",\r\n                border: \"2px solid\",\r\n                padding: \"15px\",\r\n                zIndex: 999\r\n            }}>\r\n                <p>mobile: {mobile ? \"TRUE\" : \"FALSE\"}</p>\r\n            </div> */}\r\n            <div className={styles.dotContainer}>\r\n                {dots(props.images)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel","import React from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({\r\n    index: 0, \r\n    initialTransform: 0})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Carousel \r\n          currentSlide={currentSlide.index}\r\n          initialTransform={currentSlide.initialTransform}\r\n          images={images}\r\n        />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"showOverflow\":\"css_showOverflow__3ap7Y\",\"smoothSlide\":\"css_smoothSlide__2wZ2G\",\"container\":\"css_container__3i3vU\",\"arrowNext\":\"css_arrowNext__2BkGJ\",\"arrowPrev\":\"css_arrowPrev__3ROEp\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"zoomOut\":\"css_zoomOut__Rt9JG\",\"slide\":\"css_slide__mS6RN\",\"imgContainer\":\"css_imgContainer__2auMe\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotContainer\":\"css_dotContainer__u_0OB\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};"],"sourceRoot":""}