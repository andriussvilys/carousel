{"version":3,"sources":["components/Carousel.js","App.js","index.js","components/css/index.module.scss"],"names":["Carousel","props","zoomRef","React","useRef","slideTo","index","slideToIndex","images","length","newTransfrom","delay","zoom","setZoom","zoomDefault","setTimeout","setSlidePosition","slidePosition","currentSlide","currentTransform","prevTransform","containerRef","slideContainerRef","useState","smooth","initialTransform","pinch","scale","distance","origin","x","y","position","moveHandler","state","options","containerWidth","current","clientWidth","slideCount","slideWidth","transform","movement","direction","moveSpeed","Math","abs","round","moveEndHandler","positionFix","calcZoomPan","cursorX","cursorY","container","slideContainer","zoomedImage","offset","getBoundingClientRect","marginY","top","clientHeight","middleGuideY","panY","genericOptions","domTarget","eventOptions","passive","bind","useGesture","onDragStart","onDrag","event","touches","onDragEnd","onPinchStart","onPinch","da","zoomStatus","onPinchEnd","onWheelStart","onWheel","preventDefault","onWheelEnd","onMove","xy","zoomPanHandler","useEffect","document","querySelector","style","overflow","ref","className","styles","showOverflow","arrowPrev","onClick","id","smoothSlide","width","map","image","slide","key","src","alt","onTouchEnd","e","onMouseDown","newZoom","newScale","arrowNext","imageList","dots","dot","dot_active","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cd505120.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useGesture } from 'react-use-gesture'\r\n\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const zoomRef = React.useRef(null)\r\n\r\n    const slideTo = (index) => {\r\n        let slideToIndex = index;\r\n        if(slideToIndex < 0){\r\n            slideToIndex = props.images.length - 1; \r\n        }\r\n        else if(slideToIndex > props.images.length - 1){\r\n            slideToIndex = 0;\r\n        }\r\n        const newTransfrom = -((100 / props.images.length) * slideToIndex)\r\n        let delay = zoom.zoom ? 250 : 0\r\n        if(zoom.zoom){\r\n            setZoom({...zoomDefault})\r\n        }\r\n        setTimeout(() => {            \r\n            setSlidePosition({\r\n                ...slidePosition,\r\n                currentSlide: slideToIndex,\r\n                currentTransform: newTransfrom,\r\n                prevTransform: newTransfrom,\r\n            })\r\n        }, delay);\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === slidePosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n    const arrowNext = () => {\r\n        return <div \r\n            className={styles.arrowNext}\r\n            onClick={() => {\r\n                slideTo(slidePosition.currentSlide + 1)\r\n            }}\r\n        ></div>\r\n    }\r\n    const arrowPrev = () => {\r\n        return <div \r\n            className={styles.arrowPrev}\r\n            onClick={() => {\r\n                slideTo(slidePosition.currentSlide - 1)\r\n            }}\r\n        ></div>\r\n    }\r\n\r\n\r\n    const renderImages = (data) => {\r\n        return data.map((image, index) => {\r\n        return (\r\n            <div\r\n            className={`${styles.slide} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            // className={`${styles.slide} ${zoom.pinch ? styles.showOverflow : \"\"} \r\n            // ${zoom.smooth ? styles.smoothSlide : \"\"}`}\r\n            key={`${image}-${index}`}\r\n            style={{width: `${100 / props.images.length}%`}}\r\n            >                    \r\n                <img \r\n                    style={slidePosition.currentSlide === index ? \r\n                        {transform: `scale(${zoom.scale}) translate(${zoom.position.x}%, ${zoom.position.y}%)`} : {}}\r\n                    className={`${zoom.smooth && slidePosition.currentSlide === index ? styles.smoothSlide : \"\"}`}\r\n                    ref={slidePosition.currentSlide === index ? zoomRef : null}\r\n                    src={image.src}\r\n                    alt={image.src}\r\n                    // onTouchStart={(e) => {\r\n                    //     console.log(\"TOUCH\")\r\n                    //     e.preventDefault()\r\n                    // }}\r\n                    onTouchEnd={e => {\r\n                        e.preventDefault()\r\n                    }}\r\n                    onMouseDown={(e) => {\r\n                        // e.preventDefault()\r\n                        // console.log(e)\r\n                        // console.log(e.touches)\r\n                        // console.log(e.type)\r\n                        // if(e.touches && e.touches.length > 0){\r\n                        //     console.log(e.touches)\r\n                        //     alert(\"touches\")\r\n                        //     return\r\n                        // }\r\n                        // alert(e.type)\r\n                        let newScale = zoom.scale + 1\r\n                        let newZoom = true\r\n                        newScale = newScale > 3 ? 1 : newScale\r\n                        newZoom = newScale === 1 ? false : true\r\n                        const position = newScale === 1 ? {x: 0, y: 0} : zoom.position\r\n                        setZoom({\r\n                            ...zoom,\r\n                            zoom: newZoom,\r\n                            scale: newScale,\r\n                            smooth: true,\r\n                            position\r\n                        })\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n        })\r\n    }\r\n          \r\n    const containerRef = React.useRef()\r\n    const slideContainerRef = React.useRef()\r\n    const [slidePosition, setSlidePosition] = React.useState({\r\n        smooth: true,\r\n        currentSlide: props.currentSlide,\r\n        prevTransform: props.initialTransform,\r\n        currentTransform: props.initialTransform\r\n    })\r\n    const zoomDefault =  {\r\n        pinch: null,\r\n        zoom: null,\r\n        smooth: false,\r\n        scale: 1,\r\n        distance: 0,\r\n        origin: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        position: {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    }\r\n    const [zoom, setZoom] = React.useState({...zoomDefault})\r\n\r\n    const moveStartHandeler = (state) => {\r\n    }\r\n    const moveHandler = (state, options) => {\r\n        if(zoom.zoom){\r\n        return}\r\n          const containerWidth = containerRef.current.clientWidth;\r\n          const slideCount = props.images.length\r\n          const slideWidth = 100 / slideCount\r\n          let  transform = slidePosition.prevTransform + ((state.movement[0] * options.direction * options.moveSpeed * 100 / containerWidth) / slideCount)\r\n\r\n        if(transform > 0){\r\n            transform = 0\r\n        }\r\n        if(transform < -100 + slideWidth){\r\n            transform = -100 + slideWidth\r\n        }\r\n        var index = Math.abs(Math.round(transform/slideWidth))\r\n        index = index > slideCount - 1 ? slideCount - 1 : index\r\n\r\n          return setSlidePosition({ \r\n            ...slidePosition,  \r\n            currentSlide: index,\r\n            currentTransform: transform,\r\n            smooth: false\r\n            })\r\n    }\r\n    const moveEndHandler = (state) => {\r\n        if(zoom.zoom){\r\n        return}\r\n\r\n        var positionFix = slidePosition.currentTransform;\r\n        var slideCount = props.images.length;\r\n        var slideWidth = 100 / slideCount;\r\n        positionFix = positionFix > 0 ? 0 : positionFix\r\n        const index = slidePosition.currentSlide\r\n\r\n        positionFix = (0 - (slideWidth * index))\r\n\r\n        return setSlidePosition({\r\n            ...slidePosition, \r\n            prevTransform: positionFix,\r\n            currentTransform: positionFix,\r\n            distance: null,\r\n            smooth: true\r\n        })\r\n    }\r\n    const calcZoomPan = (cursorX, cursorY) => {\r\n        const container = containerRef.current\r\n        const slideContainer = slideContainerRef.current\r\n        const zoomedImage = zoomRef.current\r\n\r\n        const offset = {y: container.getBoundingClientRect().y, x: container.getBoundingClientRect().x, top: container.getBoundingClientRect().top}\r\n\r\n        const imgToSlideHeightRatio = zoomedImage.clientHeight * 100 / slideContainer.clientHeight\r\n        \r\n        const visibleSectionY = imgToSlideHeightRatio / zoom.scale\r\n        const marginY = ((100 - visibleSectionY) / 2) + 10\r\n        const middleGuideY = slideContainer.clientHeight / 2\r\n        let y = cursorY - offset.y\r\n        let moveY = y - middleGuideY\r\n        let panY = (moveY * marginY / middleGuideY)\r\n\r\n        const middleGuideX = (slideContainer.clientWidth / 2) / props.images.length\r\n        let cursorPositionX = (cursorX - offset.x) - middleGuideX\r\n\r\n        const imageWidth = zoomedImage.clientWidth * zoom.scale;\r\n        const panX = (cursorPositionX * 100) / imageWidth\r\n        return {x: panX, y: panY}\r\n    }\r\n    const zoomPanHandler = (state) => {\r\n        const {x, y} = calcZoomPan(state.xy[0], state.xy[1])\r\n        setZoom({\r\n            ...zoom,\r\n            smooth: false,\r\n            position: {\r\n                x, y\r\n            }\r\n        })\r\n    }\r\n    const genericOptions = {\r\n        // filterTaps: true,\r\n        domTarget: slideContainerRef,\r\n        eventOptions: {\r\n            passive: false\r\n        }\r\n        // threshold: 10\r\n    }\r\n    const bind = useGesture(\r\n        {\r\n            onDragStart: () => {\r\n                moveStartHandeler()\r\n            },\r\n            onDrag: (state) => {\r\n                if(state.event.touches && state.event.touches.length > 1){return}\r\n                moveHandler(state, {moveSpeed: 2, direction: 1})\r\n            },\r\n            onDragEnd: (state) => moveEndHandler(state),\r\n            onPinchStart: state => {\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: true\r\n                })\r\n            },\r\n            onPinch: state => {\r\n                const pinchDistance = state.da[0]\r\n                let scale = pinchDistance / 100\r\n                let zoomStatus = true\r\n                if(scale <= 1){\r\n                    scale = 1\r\n                    zoomStatus = false\r\n                }\r\n                const {x, y} = calcZoomPan(state.origin[0], state.origin[1])\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: zoomStatus,\r\n                    pinch: true,\r\n                    distance: state.da[0],\r\n                    scale,\r\n                    origin: {\r\n                        x, y\r\n                    },\r\n                    position: {\r\n                        x, y\r\n                    }\r\n                })\r\n            },\r\n            onPinchEnd: state => {\r\n                setZoom({...zoomDefault})\r\n            },\r\n            onWheelStart: () => {\r\n                moveStartHandeler()\r\n            },\r\n            onWheel: (state) => {\r\n                state.event.preventDefault()\r\n                moveHandler(state, {moveSpeed: 1.5, direction: -1})\r\n            },\r\n            onWheelEnd: state => {\r\n                moveEndHandler(state)\r\n            },\r\n            onMove: state => {\r\n                if(!zoom.zoom || zoom.pinch)return\r\n                zoomPanHandler(state)\r\n            },\r\n        },\r\n        {...genericOptions},\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(zoom.pinch){\r\n            document.querySelector(\".App\").style.overflow = \"hidden\"\r\n        }\r\n        else{\r\n            document.querySelector(\".App\").style.overflow = \"unset\"\r\n        }\r\n      }, [zoom])\r\n\r\n    useEffect(() => {\r\n        slideTo(props.currentSlide)\r\n      }, [props])\r\n\r\n      useEffect(bind, [bind])\r\n    return(\r\n            <div \r\n                ref={containerRef}\r\n                className={`${styles.container} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            >\r\n            {arrowPrev()}\r\n            <div \r\n                // {...bind()}\r\n                id={\"slideContainer\"}\r\n                className={`${styles.slideContainer} ${slidePosition.smooth ? styles.smoothSlide : \"\"} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n                ref={slideContainerRef}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    // transform: `translateX(${-cursorPosition.transform}%)`\r\n                    transform: `translateX(${slidePosition.currentTransform}%)`\r\n                }}\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            {arrowNext()}\r\n            {/* <div\r\n            style={{\r\n                position: \"fixed\",\r\n                right: 0,\r\n                bottom: 0,\r\n                background: \"white\",\r\n                border: \"2px solid\",\r\n                padding: \"15px\"\r\n            }}>\r\n                <p >distance: {zoom.distance}</p>\r\n                <p>scale: {zoom.scale}</p>\r\n                <p>zoom: {zoom.zoom ? \"true\" : \"false\"}</p>\r\n                <p>origin: </p>\r\n                <p>x: {zoom.origin.x} | y: {zoom.origin.y}</p>\r\n            </div> */}\r\n            {dots(props.images)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel","import React, { useEffect } from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({\r\n    index: 0, \r\n    initialTransform: 0})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Carousel \r\n        currentSlide={currentSlide.index}\r\n        initialTransform={currentSlide.initialTransform}\r\n        images={images}\r\n      />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            // var slideContainer = document.getElementById(\"slideContainer\");\r\n                            // slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"showOverflow\":\"css_showOverflow__3ap7Y\",\"smoothSlide\":\"css_smoothSlide__2wZ2G\",\"container\":\"css_container__3i3vU\",\"arrowNext\":\"css_arrowNext__2BkGJ\",\"arrowPrev\":\"css_arrowPrev__3ROEp\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"imgContainer\":\"css_imgContainer__2auMe\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};"],"sourceRoot":""}