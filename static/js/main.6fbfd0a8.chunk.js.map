{"version":3,"sources":["components/css/index.module.scss","components/Carousel.js","App.js","index.js"],"names":["module","exports","Carousel","props","zoomDefault","zoomedIn","zoomIndex","zoomPower","x","y","startX","startY","React","useState","isDown","transform","prevTransform","initialTransform","currentSlide","index","direction","zoom","cursorPosition","setCursorPosition","zoomRef","useRef","currentSlideRef","startHandle","e","preventDefault","container","document","querySelector","styles","slideContainer","classList","remove","left","touches","pageX","offsetLeft","moveHandle","length","Math","hypot","pageY","window","innerWidth","add","disableBodyScroll","current","zoomedImage","offset","getBoundingClientRect","top","imgToSlideHeightRatio","clientHeight","imgToSlideWidthRatio","clientWidth","marginY","middleGuideY","panY","clientY","toFixed","marginX","middleGuideX","panX","clientX","walk","endHandle","positionFix","slideCount","images","slideWidth","useEffect","className","id","style","width","onMouseDown","onTouchStart","onMouseMove","onTouchMove","onMouseUp","onMouseOut","onTouchEnd","map","image","slide","ref","key","slideInView","src","alt","button_zoom","onClick","countZoom","imageList","console","log","dots","newTransfrom","slideTo","dot","dot_active","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6fbfd0a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"container\":\"css_container__3i3vU\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};","import React, { useEffect } from 'react'\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const zoomDefault =  {\r\n        zoomedIn: null,\r\n        zoomIndex: null,\r\n        zoomPower: 1,\r\n        x: 0,\r\n        y: 0,\r\n        startX: null,\r\n        startY: null,\r\n    }\r\n    const [cursorPosition, setCursorPosition] = React.useState({\r\n          isDown: null,\r\n          startX: null,\r\n          transform: 0,\r\n          prevTransform: props.initialTransform,\r\n          currentSlide: props.index,\r\n          direction: null,\r\n          zoom: {\r\n              zoomedIn: null,\r\n              zoomIndex: null,\r\n              zoomPower: 1,\r\n              x: 0,\r\n              y: 0,\r\n              startX: null,\r\n              startY: null,\r\n          }\r\n        });\r\n\r\n    const slideTo = (index) => {\r\n        const newTransfrom = (100 / props.images.length) * index\r\n        setCursorPosition({\r\n            ...cursorPosition,\r\n            currentSlide: index,\r\n            transform: newTransfrom,\r\n            prevTransform: newTransfrom,\r\n            zoom: {...zoomDefault}\r\n        })\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n\r\n        console.log(\"imagesList\")\r\n        console.log(imageList)\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === cursorPosition.currentSlide ? styles.dot_active : \"\"}`}></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n\r\n    const zoomRef = React.useRef(null)\r\n    const currentSlideRef = React.useRef(null)\r\n\r\n        const startHandle = (e) => {\r\n            e.preventDefault();\r\n            const container = document.querySelector(`.${styles.container}`)\r\n            document.querySelector(`.${styles.slideContainer}`).classList.remove(\"smoothSlide\");\r\n            const left = e.touches ? e.touches[0].pageX: e.pageX;\r\n\r\n            setCursorPosition({\r\n                ...cursorPosition,\r\n                isDown: true,\r\n                startX: left - container.offsetLeft\r\n            })\r\n          };\r\n\r\n        const moveHandle = (e) => {\r\n            if(e.touches && e.touches.length > 1){\r\n                return setCursorPosition({\r\n                    ...cursorPosition,\r\n                    zoom: {\r\n                        ...cursorPosition.zoom,\r\n                        zoomPower: {\r\n                            zoomedIn: true,\r\n                            zoomPower: Math.hypot(e.touches[0].pageX - e.touches[1].pageX, e.touches[0].pageY - e.touches[1].pageY)\r\n                        }\r\n                    }\r\n                })\r\n                \r\n            }\r\n            if(cursorPosition.zoom.zoomedIn){\r\n                e.preventDefault()\r\n                if(window.innerWidth < 720){\r\n                    document.querySelector(\"body\").classList.add(styles.disableBodyScroll)\r\n                }\r\n            //   const slideContainer = document.querySelector(`.${styles.slideContainer}`)\r\n            const slideContainer = currentSlideRef.current\r\n            const zoomedImage = zoomRef.current\r\n              const container = document.querySelector(`.${styles.container}`)\r\n              const offset = {y: container.getBoundingClientRect().y, x: container.getBoundingClientRect().x, top: container.getBoundingClientRect().top}\r\n\r\n              \r\n              const imgToSlideHeightRatio = zoomedImage.clientHeight * 100 / slideContainer.clientHeight\r\n              const imgToSlideWidthRatio = zoomedImage.clientWidth * 100 / slideContainer.clientWidth\r\n              \r\n              const visibleSectionY = imgToSlideHeightRatio / cursorPosition.zoom.zoomPower\r\n              const marginY = ((100 - visibleSectionY) / 2) + 10\r\n              const middleGuideY = slideContainer.clientHeight / 2\r\n              let y = e.touches ? e.touches[0].clientY - offset.y : e.clientY - offset.y;\r\n              let moveY = y - middleGuideY\r\n              let panY = (moveY * marginY / middleGuideY).toFixed(2)\r\n\r\n              const visibleSectionX = imgToSlideWidthRatio / cursorPosition.zoom.zoomPower\r\n              const marginX = ((100 - visibleSectionX) / 2) + 10\r\n              const middleGuideX = slideContainer.clientWidth / 2\r\n              let x = e.touches ? e.touches[0].clientX - offset.x : e.clientX - offset.x\r\n              let moveX = x - middleGuideX\r\n              let panX = (moveX * marginX / middleGuideX).toFixed(2)\r\n\r\n                return setCursorPosition({\r\n                    ...cursorPosition, \r\n                    zoom:{...cursorPosition.zoom, \r\n                        y:panY, \r\n                        x: panX\r\n                    }\r\n                })\r\n            }\r\n            if(!cursorPosition.isDown)return\r\n              e.preventDefault();\r\n              var slideContainer = document.querySelector(`.${styles.slideContainer}`);\r\n              \r\n              const x = e.touches ? e.touches[0].pageX: e.pageX\r\n              var walk = 100 * (cursorPosition.startX - x) / slideContainer.clientWidth;\r\n              var transform = walk + cursorPosition.prevTransform;\r\n\r\n              var direction = walk > 0 ? 1: -1;\r\n              setCursorPosition({\r\n                ...cursorPosition,\r\n                transform: transform,\r\n                direction: direction\r\n              })\r\n          };\r\n\r\n          var endHandle = () => {\r\n              if(cursorPosition.zoom.zoomedIn){ return document.querySelector(\"body\").classList.remove(styles.disableBodyScroll) }\r\n              if(!cursorPosition.isDown)return\r\n            document.querySelector(`.${styles.slideContainer}`).classList.add(\"smoothSlide\");\r\n            var positionFix = cursorPosition.transform;\r\n            \r\n            var index = null;\r\n            var slideCount = props.images.length;\r\n            \r\n            var slideWidth = 100 / slideCount;\r\n            if (positionFix > 0) {\r\n              positionFix = 0;\r\n              index = 0;\r\n            } \r\n            if (positionFix < slideWidth - 100) {\r\n                positionFix = slideWidth - 100;\r\n                index = slideCount - 1;\r\n            } \r\n            else {\r\n            index = cursorPosition.currentSlide + cursorPosition.direction;\r\n                if(index < 0){index = 0}\r\n                if(index > slideCount - 1){index = slideCount -1 }\r\n                positionFix = (index) * (100 / slideCount);\r\n            }\r\n            setCursorPosition({\r\n            ...cursorPosition,\r\n            isDown: false,\r\n            transform: positionFix,\r\n            prevTransform: positionFix,\r\n            currentSlide: index\r\n            })\r\n          };\r\n\r\n        const renderImages = (data) => {\r\n            return data.map((image, index) => {\r\n            return (\r\n                <div\r\n                className={styles.slide}\r\n                ref={cursorPosition.currentSlide === image.index ? currentSlideRef : null }\r\n                key={`${image}-${index}`}\r\n                style={{width: `${100 / props.images.length}%`}}\r\n                >\r\n                    <img \r\n                        className={`\r\n                        ${cursorPosition.currentSlide === image.index ? styles.slideInView : \"\"}\r\n                        `}\r\n                        ref={cursorPosition.zoom.zoomedIn && cursorPosition.currentSlide === image.index ? zoomRef : null}\r\n                        style={cursorPosition.zoom.zoomedIn ? \r\n                            {transform: \r\n                            `scale(${cursorPosition.zoom.zoomPower}) \r\n                            translate(${cursorPosition.zoom.x}%, \r\n                            ${cursorPosition.zoom.y}%)`} \r\n                            : {}}\r\n                        src={image.src}\r\n                        alt={image.src}\r\n                    />\r\n                </div>\r\n            )\r\n            })\r\n        }\r\n\r\n        useEffect(() => {\r\n            setCursorPosition({\r\n                ...cursorPosition,\r\n                direction: null,\r\n                transform: props.initialTransform,\r\n                prevTransform: props.initialTransform,\r\n                currentSlide: props.currentSlide,\r\n                zoom: {\r\n                    zoomedIn: null,\r\n                    zoomIndex: null,\r\n                    zoomPower: 1,\r\n                    x: 0,\r\n                    y: 0,\r\n                    startX: null,\r\n                    startY: null,\r\n                }\r\n            })\r\n          }, [props])\r\n\r\n    return(\r\n            <div className={styles.container}>\r\n            <div \r\n                id=\"slideContainer\"\r\n                className={styles.slideContainer}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    transform: `translateX(${-cursorPosition.transform}%)`\r\n                }}\r\n                onMouseDown={(e) => {startHandle(e)} }\r\n                onTouchStart={(e) => {startHandle(e)} }\r\n                onMouseMove={(e) => {moveHandle(e)} }\r\n                onTouchMove={(e) => {moveHandle(e)} }\r\n                onMouseUp={() => {endHandle();} }\r\n                onMouseOut={() => {endHandle();} }\r\n                onTouchEnd={() => {endHandle();} }\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            <button \r\n            className={styles.button_zoom}\r\n            onClick={() => {\r\n                let zoomedIn = null\r\n                const countZoom = () => {\r\n                    let zoomPower = cursorPosition.zoom.zoomPower + 1\r\n                    zoomedIn = true\r\n                    if(zoomPower > 3){\r\n                        zoomPower = 1\r\n                        zoomedIn = false\r\n                    }\r\n                    return {zoomPower, zoomedIn}\r\n                }\r\n                const zoom = countZoom()\r\n                setCursorPosition({\r\n                    ...cursorPosition, \r\n                    zoom: {\r\n                        ...cursorPosition.zoom,\r\n                        zoomedIn: zoom.zoomedIn,\r\n                        zoomPower: zoom.zoomPower,\r\n                        zoomIndex: cursorPosition.currentSlide,\r\n                        y: 0,\r\n                        x: 0\r\n                    }\r\n                })\r\n            }}>enlarge</button>\r\n            {dots(props.images)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n\r\n\r\n  ","import React, { useEffect } from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({index: null, initialTransform: null})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Carousel \r\n        currentSlide={currentSlide.index}\r\n        initialTransform={currentSlide.initialTransform}\r\n        images={images}\r\n      />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            var slideContainer = document.getElementById(\"slideContainer\");\r\n                            slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}