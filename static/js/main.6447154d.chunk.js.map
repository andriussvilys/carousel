{"version":3,"sources":["components/Carousel.js","App.js","index.js","components/css/index.module.scss"],"names":["Carousel","props","zoomRef","React","useRef","slideTo","index","newTransfrom","images","length","delay","zoom","setZoom","zoomDefault","setTimeout","setSlidePosition","slidePosition","currentSlide","currentTransform","prevTransform","containerRef","slideContainerRef","useState","smooth","initialTransform","pinch","scale","distance","origin","x","y","position","moveStartHandeler","state","console","log","moveHandler","options","containerWidth","current","clientWidth","slideCount","slideWidth","transform","movement","direction","moveSpeed","Math","abs","round","moveEndHandler","positionFix","calcZoomPan","cursorX","cursorY","container","slideContainer","zoomedImage","offset","getBoundingClientRect","marginY","top","clientHeight","middleGuideY","panY","genericOptions","domTarget","eventOptions","passive","bind","useGesture","onDragStart","onDrag","event","touches","onDragEnd","onPinchStart","onPinch","da","zoomStatus","onPinchEnd","onWheelStart","onWheel","preventDefault","onWheelEnd","onMove","xy","zoomPanHandler","useEffect","document","querySelector","style","overflow","ref","className","styles","showOverflow","id","smoothSlide","width","map","image","slide","key","src","alt","onClick","newZoom","newScale","button_zoom","right","bottom","background","border","padding","imageList","dots","dot","dot_active","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6447154d.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useGesture } from 'react-use-gesture'\r\n\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const zoomRef = React.useRef(null)\r\n\r\n    const slideTo = (index) => {\r\n        const newTransfrom = -((100 / props.images.length) * index)\r\n        let delay = zoom.zoom ? 400 : 0\r\n        if(zoom.zoom){\r\n            setZoom({...zoomDefault})\r\n        }\r\n        setTimeout(() => {            \r\n            setSlidePosition({\r\n                ...slidePosition,\r\n                currentSlide: index,\r\n                currentTransform: newTransfrom,\r\n                prevTransform: newTransfrom,\r\n            })\r\n        }, delay);\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            onClick={() => {\r\n                slideTo(index)\r\n            }}\r\n            key={`carouselDot-${index}`} \r\n            className={`${styles.dot} ${index === slidePosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n\r\n    const renderImages = (data) => {\r\n        return data.map((image, index) => {\r\n        return (\r\n            <div\r\n            className={`${styles.slide} ${zoom.pinch ? styles.showOverflow : \"\"} ${zoom.smooth ? styles.smoothSlide : \"\"}`}\r\n            key={`${image}-${index}`}\r\n            style={{width: `${100 / props.images.length}%`}}\r\n            >                    \r\n                <img \r\n                    style={slidePosition.currentSlide === index ? \r\n                        {transform: `scale(${zoom.scale}) translate(${zoom.position.x}%, ${zoom.position.y}%)`} : {}}\r\n                    className={`${zoom.smooth && slidePosition.currentSlide === index ? styles.smoothSlide : \"\"}`}\r\n                    ref={slidePosition.currentSlide === index ? zoomRef : null}\r\n                    src={image.src}\r\n                    alt={image.src}\r\n                    onClick={() => {\r\n                        let newScale = zoom.scale + 1\r\n                        let newZoom = true\r\n                        newScale = newScale > 3 ? 1 : newScale\r\n                        newZoom = newScale === 1 ? false : true\r\n                        const position = newScale === 1 ? {x: 0, y: 0} : zoom.position\r\n                        setZoom({\r\n                            ...zoom,\r\n                            zoom: newZoom,\r\n                            scale: newScale,\r\n                            smooth: true,\r\n                            position\r\n                        })\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n        })\r\n    }\r\n          \r\n    const containerRef = React.useRef()\r\n    const slideContainerRef = React.useRef()\r\n    const [slidePosition, setSlidePosition] = React.useState({\r\n        smooth: true,\r\n        currentSlide: props.currentSlide,\r\n        prevTransform: props.initialTransform,\r\n        currentTransform: props.initialTransform\r\n    })\r\n    const zoomDefault =  {\r\n        pinch: null,\r\n        zoom: null,\r\n        smooth: true,\r\n        scale: 1,\r\n        distance: 0,\r\n        origin: {\r\n            x: 0,\r\n            y: 0\r\n        },\r\n        position: {\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    }\r\n    const [zoom, setZoom] = React.useState({...zoomDefault})\r\n\r\n    const moveStartHandeler = (state) => {\r\n        console.log(\"START MOVE\")\r\n    }\r\n    const moveHandler = (state, options) => {\r\n        console.log(\"MOVE\")\r\n        if(zoom.zoom){\r\n            console.log(\"zoom\")\r\n        return}\r\n          const containerWidth = containerRef.current.clientWidth;\r\n          const slideCount = props.images.length\r\n          const slideWidth = 100 / slideCount\r\n          let  transform = slidePosition.prevTransform + ((state.movement[0] * options.direction * options.moveSpeed * 100 / containerWidth) / slideCount)\r\n\r\n        if(transform > 0){\r\n            transform = 0\r\n        }\r\n        if(transform < -100 + slideWidth){\r\n            transform = -100 + slideWidth\r\n        }\r\n        var index = Math.abs(Math.round(transform/slideWidth))\r\n        index = index > slideCount - 1 ? slideCount - 1 : index\r\n\r\n          return setSlidePosition({ \r\n            ...slidePosition,  \r\n            currentSlide: index,\r\n            currentTransform: transform,\r\n            smooth: false\r\n            })\r\n    }\r\n    const moveEndHandler = (state) => {\r\n        if(zoom.zoom){\r\n            console.log(\"zoom\")\r\n        return}\r\n\r\n        var positionFix = slidePosition.currentTransform;\r\n        var slideCount = props.images.length;\r\n        var slideWidth = 100 / slideCount;\r\n        positionFix = positionFix > 0 ? 0 : positionFix\r\n        const index = slidePosition.currentSlide\r\n\r\n        positionFix = (0 - (slideWidth * index))\r\n\r\n        return setSlidePosition({\r\n            ...slidePosition, \r\n            prevTransform: positionFix,\r\n            currentTransform: positionFix,\r\n            distance: null,\r\n            smooth: true\r\n        })\r\n    }\r\n    const calcZoomPan = (cursorX, cursorY) => {\r\n\r\n        console.log({cursorX, cursorY})\r\n        const container = containerRef.current\r\n        const slideContainer = slideContainerRef.current\r\n        const zoomedImage = zoomRef.current\r\n\r\n        const offset = {y: container.getBoundingClientRect().y, x: container.getBoundingClientRect().x, top: container.getBoundingClientRect().top}\r\n\r\n        const imgToSlideHeightRatio = zoomedImage.clientHeight * 100 / slideContainer.clientHeight\r\n        \r\n        const visibleSectionY = imgToSlideHeightRatio / zoom.scale\r\n        const marginY = ((100 - visibleSectionY) / 2) + 10\r\n        const middleGuideY = slideContainer.clientHeight / 2\r\n        let y = cursorY - offset.y\r\n        let moveY = y - middleGuideY\r\n        let panY = (moveY * marginY / middleGuideY)\r\n\r\n        const middleGuideX = (slideContainer.clientWidth / 2) / props.images.length\r\n        let cursorPositionX = (cursorX - offset.x) - middleGuideX\r\n\r\n        const imageWidth = zoomedImage.clientWidth * zoom.scale;\r\n        const panX = (cursorPositionX * 100) / imageWidth\r\n\r\n        // let cursorPositionX = cursorX - offset.x\r\n        // const panX = ((50 / (container.clientWidth / 2)) * cursorPositionX) - 50\r\n\r\n        return {x: panX, y: panY}\r\n    }\r\n    const zoomPanHandler = (state) => {\r\n        console.log({x: state.xy[0], y: state.xy[1]})\r\n        const {x, y} = calcZoomPan(state.xy[0], state.xy[1])\r\n        setZoom({\r\n            ...zoom,\r\n            smooth: null,\r\n            position: {\r\n                x, y\r\n            }\r\n        })\r\n    }\r\n    const genericOptions = {\r\n        // filterTaps: true,\r\n        domTarget: slideContainerRef,\r\n        eventOptions: {\r\n            passive: false\r\n        }\r\n        // threshold: 10\r\n    }\r\n    const bind = useGesture(\r\n        {\r\n            onDragStart: () => {\r\n                moveStartHandeler()\r\n            },\r\n            onDrag: (state) => {\r\n                if(state.event.touches && state.event.touches.length > 1){return}\r\n                moveHandler(state, {moveSpeed: 2, direction: 1})\r\n            },\r\n            onDragEnd: (state) => moveEndHandler(state),\r\n            onPinchStart: state => {\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: true\r\n                })\r\n            },\r\n            onPinch: state => {\r\n                // console.log(state.da[0])\r\n                // zoomPanHandler(state)\r\n                console.log(\"PINCH\")\r\n                console.log(state.origin)\r\n                const pinchDistance = state.da[0]\r\n                let scale = pinchDistance / 100\r\n                let zoomStatus = true\r\n                if(scale <= 1){\r\n                    scale = 1\r\n                    zoomStatus = false\r\n                }\r\n                const {x, y} = calcZoomPan(state.origin[0], state.origin[1])\r\n                // const {x, y} = calcZoomPan(state.xy[0], state.xy[1])\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: zoomStatus,\r\n                    pinch: true,\r\n                    distance: state.da[0],\r\n                    scale,\r\n                    origin: {\r\n                        x, y\r\n                    },\r\n                    position: {\r\n                        x, y\r\n                    }\r\n                })\r\n            },\r\n            onPinchEnd: state => {\r\n                setZoom({...zoomDefault})\r\n            },\r\n            onWheelStart: () => {\r\n                moveStartHandeler()\r\n            },\r\n            onWheel: (state) => {\r\n                state.event.preventDefault()\r\n                console.log(state.event)\r\n                moveHandler(state, {moveSpeed: 1.5, direction: -1})\r\n            },\r\n            onWheelEnd: state => {\r\n                moveEndHandler(state)\r\n            },\r\n            onMove: state => {\r\n                if(!zoom.zoom || zoom.pinch)return\r\n                zoomPanHandler(state)\r\n            },\r\n            // onMoveEnd: state => {\r\n            //     setZoom({\r\n            //         ...zoom,\r\n            //         smooth: true,\r\n            //         zoom: false,\r\n            //         scale: 1,\r\n            //         position: {\r\n            //             x: 0,\r\n            //             y: 0\r\n            //         }\r\n            //     })\r\n            // }\r\n        },\r\n        {...genericOptions},\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(zoom.pinch){\r\n            document.querySelector(\".App\").style.overflow = \"hidden\"\r\n        }\r\n        else{\r\n            document.querySelector(\".App\").style.overflow = \"unset\"\r\n        }\r\n      }, [zoom])\r\n\r\n    useEffect(() => {\r\n        console.log(\"props change\")\r\n        slideTo(props.currentSlide)\r\n      }, [props])\r\n\r\n      useEffect(bind, [bind])\r\n\r\n    // useEffect(() => {\r\n    //     slideTo(props.currentSlide)\r\n    //   }, [props])\r\n\r\n    return(\r\n            <div \r\n                ref={containerRef}\r\n                className={`${styles.container} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n            >\r\n            <div \r\n                // {...bind()}\r\n                id={\"slideContainer\"}\r\n                className={`${styles.slideContainer} ${slidePosition.smooth ? styles.smoothSlide : \"\"} ${zoom.pinch ? styles.showOverflow : \"\"}`}\r\n                ref={slideContainerRef}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    // transform: `translateX(${-cursorPosition.transform}%)`\r\n                    transform: `translateX(${slidePosition.currentTransform}%)`\r\n                }}\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            <button \r\n            className={styles.button_zoom}\r\n            onClick={() => {\r\n                let newScale = zoom.scale + 1\r\n                let newZoom = true\r\n                newScale = newScale > 3 ? 1 : newScale\r\n                newZoom = newScale === 1 ? false : true\r\n                const position = newScale === 1 ? {x: 0, y: 0} : zoom.position\r\n                setZoom({\r\n                    ...zoom,\r\n                    zoom: newZoom,\r\n                    scale: newScale,\r\n                    smooth: true,\r\n                    position\r\n                })\r\n            }}>enlarge</button>\r\n            <div\r\n            style={{\r\n                position: \"fixed\",\r\n                right: 0,\r\n                bottom: 0,\r\n                background: \"white\",\r\n                border: \"2px solid\",\r\n                padding: \"15px\"\r\n            }}>\r\n                <p >distance: {zoom.distance}</p>\r\n                <p>scale: {zoom.scale}</p>\r\n                <p>zoom: {zoom.zoom ? \"true\" : \"false\"}</p>\r\n                <p>origin: </p>\r\n                <p>x: {zoom.origin.x} | y: {zoom.origin.y}</p>\r\n                {/* <p>x: {zoom.position.x} | y: {zoom.position.y}</p> */}\r\n            </div>\r\n            {dots(props.images)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel","import React, { useEffect } from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({\r\n    index: 0, \r\n    initialTransform: 0})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Carousel \r\n        currentSlide={currentSlide.index}\r\n        initialTransform={currentSlide.initialTransform}\r\n        images={images}\r\n      />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            // var slideContainer = document.getElementById(\"slideContainer\");\r\n                            // slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"showOverflow\":\"css_showOverflow__3ap7Y\",\"smoothSlide\":\"css_smoothSlide__2wZ2G\",\"container\":\"css_container__3i3vU\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"imgContainer\":\"css_imgContainer__2auMe\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};"],"sourceRoot":""}