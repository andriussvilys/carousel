{"version":3,"sources":["components/Carousel.js","App.js","index.js","components/css/index.module.scss"],"names":["Carousel","props","zoomDefault","zoomedIn","zoomIndex","zoomPower","x","y","startX","startY","containerRef","React","useRef","useState","currentSlide","prevTransform","initialTransform","currentTransform","slidePosition","setSlidePosition","scale","distance","zoom","setZoom","bind","useGesture","onDragEnd","state","direction","positionFix","slideCount","images","length","slideWidth","index","dragEndHandler","movement","onDrag","console","log","containerWidth","current","clientWidth","transform","onPinch","da","useEffect","newTransfrom","slideTo","ref","className","styles","container","id","slideContainer","style","width","map","image","slide","key","draggable","src","alt","button_zoom","onClick","hi","position","right","bottom","imageList","dots","dotList","App","setCurrentSlide","setImages","families","sparkle","spring","familyList","Object","keys","family","array","document","getElementById","classList","add","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.050ef21f.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useDrag, useMove, useGesture } from 'react-use-gesture'\r\n\r\nimport styles from './css/index.module.scss'\r\n\r\nconst Carousel = props => {\r\n    const zoomDefault =  {\r\n        zoomedIn: null,\r\n        zoomIndex: null,\r\n        zoomPower: 1,\r\n        x: 0,\r\n        y: 0,\r\n        startX: null,\r\n        startY: null,\r\n    }\r\n    // const [cursorPosition, setCursorPosition] = React.useState({\r\n    //       isDown: null,\r\n    //       startX: null,\r\n    //       cursorMove: 0,\r\n    //       transform: 0,\r\n    //       prevTransform: props.initialTransform,\r\n    //       currentSlide: props.index,\r\n    //       zoom: {...zoomDefault},\r\n    //       pinchStart: {\r\n    //           x1: 0,\r\n    //           x2: 0,\r\n    //           y1: 0,\r\n    //           y2: 0,\r\n    //       }\r\n    //     });\r\n\r\n    const zoomRef = React.useRef(null)\r\n    const currentSlideRef = React.useRef(null)\r\n\r\n    const slideTo = (index) => {\r\n        const newTransfrom = -((100 / props.images.length) * index)\r\n        setSlidePosition({\r\n            ...slidePosition,\r\n            currentSlide: index,\r\n            currentTransform: newTransfrom,\r\n            prevTransform: newTransfrom,\r\n            zoom: {...zoomDefault}\r\n        })\r\n    }\r\n\r\n    const dots = (imageList) => {\r\n        if(!imageList || imageList.length < 0){return}\r\n        const dots = imageList.map((image, index) => {\r\n            return <li \r\n            // onClick={() => {\r\n            //     slideTo(index)\r\n            // }}\r\n            key={`carouselDot-${index}`} \r\n            // className={`${styles.dot} ${index === cursorPosition.currentSlide ? styles.dot_active : \"\"}`}\r\n            ></li>\r\n        })\r\n        return <ul className={styles.dotList}>{dots}</ul>\r\n    }\r\n\r\n\r\n\r\n\r\n    const renderImages = (data) => {\r\n        return data.map((image, index) => {\r\n        return (\r\n            <div\r\n            className={styles.slide}\r\n            // ref={cursorPosition.currentSlide === image.index ? currentSlideRef : null }\r\n            key={`${image}-${index}`}\r\n            style={{width: `${100 / props.images.length}%`}}\r\n            >                       \r\n                <img \r\n                    draggable={false}\r\n                    // ref={cursorPosition.currentSlide === image.index ? zoomRef : null}\r\n                    // style={cursorPosition.zoom.zoomedIn ? \r\n                    //     {transform: \r\n                    //     `scale(${cursorPosition.zoom.zoomPower}) \r\n                    //     translate(${cursorPosition.zoom.x}%, \r\n                    //     ${cursorPosition.zoom.y}%)`} \r\n                    //     : {}}\r\n                    src={image.src}\r\n                    alt={image.src}\r\n                />\r\n            </div>\r\n        )\r\n        })\r\n    }\r\n          \r\n    const containerRef = React.useRef()\r\n    const [slidePosition, setSlidePosition] = React.useState({\r\n        currentSlide: props.currentSlide,\r\n        prevTransform: props.initialTransform,\r\n        currentTransform: props.initialTransform\r\n    })\r\n    const [zoom, setZoom] = React.useState({\r\n        scale: 0,\r\n        distance: 0\r\n    })\r\n\r\n    const dragEndHandler = (x) => {\r\n        const direction = x < 0 ? 1 : -1\r\n\r\n        var positionFix = slidePosition.currentTransform;\r\n        var slideCount = props.images.length;\r\n        var slideWidth = 100 / slideCount;\r\n        var index = null\r\n\r\n        if (positionFix > 0) {\r\n          positionFix = 0;\r\n          index = 0;\r\n        } \r\n        if (positionFix < slideWidth - 100) {\r\n            positionFix = (slideWidth - 100);\r\n            index = slideCount - 1;\r\n        } \r\n        else {\r\n        index = slidePosition.currentSlide + direction;\r\n        // console.log({currentSlide: slidePosition.currentSlide, next: index, direction, x})\r\n            if(index < 0){index = 0}\r\n            if(index > slideCount - 1){index = slideCount -1 }\r\n            positionFix = -((index) * (100 / slideCount));\r\n        }\r\n        return setSlidePosition({\r\n            ...slidePosition, \r\n            currentSlide: index,\r\n            // prevTransform: slidePosition.currentTransform,\r\n            prevTransform: positionFix,\r\n            currentTransform: positionFix,\r\n        })\r\n    }\r\n\r\n    const bind = useGesture(\r\n        {\r\n            onDragEnd: (state) => dragEndHandler(state.movement[0]),\r\n            // onDrag: ({movement: [mx, my]}) => {\r\n            onDrag: (state) => {\r\n                console.log(state)\r\n                // state.event.stopPropagation()\r\n                  const containerWidth = containerRef.current.clientWidth;\r\n                  const slideCount = props.images.length\r\n                  let  transform = slidePosition.prevTransform + ((state.movement[0] * 100 / containerWidth) / slideCount)\r\n\r\n                //   transform = transform.toFixed(2)\r\n                //   console.log({transform})\r\n                //   console.log({...slidePosition})\r\n                  return setSlidePosition({ \r\n                    ...slidePosition,  \r\n                    currentTransform: transform,\r\n                    })\r\n            },\r\n            onPinch: state => {\r\n                // console.log(state.da[0])\r\n                setZoom({\r\n                    ...zoom,\r\n                    distance: state.da[0]\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        slideTo(props.currentSlide)\r\n      }, [props])\r\n\r\n    return(\r\n            <div \r\n                ref={containerRef}\r\n                className={styles.container}\r\n            >\r\n            <div \r\n                {...bind()}\r\n                id=\"slideContainer\"\r\n                className={styles.slideContainer}\r\n                style={{\r\n                    width: `${100 * props.images.length}%`,\r\n                    // transform: `translateX(${-cursorPosition.transform}%)`\r\n                    transform: `translateX(${slidePosition.currentTransform}%)`\r\n                }}\r\n            >\r\n                {renderImages(props.images)}\r\n            </div>\r\n            <button \r\n            className={styles.button_zoom}\r\n            onClick={() => {\r\n                setSlidePosition({\r\n                    ...slidePosition,\r\n                    hi: !slidePosition.hi\r\n                })\r\n                // let zoomedIn = null\r\n                // const countZoom = () => {\r\n                //     let zoomPower = cursorPosition.zoom.zoomPower + 1\r\n                //     zoomedIn = true\r\n                //     if(zoomPower > 3){\r\n                //         zoomPower = 1\r\n                //         zoomedIn = false\r\n                //     }\r\n                //     return {zoomPower, zoomedIn}\r\n                // }\r\n                // const zoom = countZoom()\r\n                // setCursorPosition({\r\n                //     ...cursorPosition, \r\n                //     zoom: {\r\n                //         ...cursorPosition.zoom,\r\n                //         zoomedIn: zoom.zoomedIn,\r\n                //         zoomPower: zoom.zoomPower,\r\n                //         zoomIndex: cursorPosition.currentSlide,\r\n                //         y: 0,\r\n                //         x: 0\r\n                //     }\r\n                // })\r\n            }}>enlarge</button>\r\n            <span style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0\r\n            }}>{zoom.distance}</span>\r\n            {dots(props.images)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n\r\n\r\n  ","import React, { useEffect } from 'react';\r\nimport Carousel from './components/Carousel'\r\nimport './index.css'\r\n\r\nconst App = props => {\r\n  let [currentSlide, setCurrentSlide] = React.useState({\r\n    index: 0, \r\n    initialTransform: 0})\r\n  var [images, setImages] = React.useState([1, 2, 3, 4, 5])\r\n\r\n  const families = {\r\n    sparkle: [{\r\n      src: \"./images/sparkle-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/sparkle-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/sparkle-3.png\",\r\n      index: 2\r\n    },\r\n    {\r\n      src: \"./images/sparkle-4.png\",\r\n      index: 3\r\n    },\r\n    {\r\n      src: \"./images/long.jpg\",\r\n      index: 4\r\n    },\r\n    {\r\n      src: \"./images/tall.png\",\r\n      index: 5\r\n    }],\r\n\r\n    spring: [{\r\n      src: \"./images/spring-1.png\",\r\n      index: 0\r\n    }, {\r\n      src: \"./images/spring-2.png\",\r\n      index: 1\r\n    }, {\r\n      src: \"./images/spring-3.png\",\r\n      index: 2\r\n    }]\r\n  }\r\n\r\n  const familyList = Object.keys(families)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Carousel \r\n        currentSlide={currentSlide.index}\r\n        initialTransform={currentSlide.initialTransform}\r\n        images={images}\r\n      />\r\n      <div className=\"fams\">\r\n        {   \r\n          familyList.map((family) => {\r\n            return <div key={family} className=\"famContainer\">\r\n              <h3>{family}</h3>\r\n              <div className=\"famImages\">\r\n                {\r\n                  families[family].map((image, index, array) => {\r\n                    return <div key={`${image}-${index}`} className=\"imgWrapper\">\r\n                      <img \r\n                          key={image.src}\r\n                          src={image.src}\r\n                          alt={image.src}\r\n\r\n                          onClick={() => {\r\n                            setImages(families[family]);\r\n                            setCurrentSlide({index: image.index, initialTransform: (100 / array.length * image.index)});\r\n                            var slideContainer = document.getElementById(\"slideContainer\");\r\n                            slideContainer.classList.add(\"smoothSlide\");\r\n                          }}\r\n                      />\r\n                    </div>\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disableBodyScroll\":\"css_disableBodyScroll__1xH86\",\"container\":\"css_container__3i3vU\",\"slideContainer\":\"css_slideContainer__8k5Ho\",\"slide\":\"css_slide__mS6RN\",\"button_zoom\":\"css_button_zoom__2VlCI\",\"zoomedIn\":\"css_zoomedIn__2LEqu\",\"dotList\":\"css_dotList__h_sCG\",\"dot\":\"css_dot__3W-KR\",\"dot_active\":\"css_dot_active__3K7-S\"};"],"sourceRoot":""}